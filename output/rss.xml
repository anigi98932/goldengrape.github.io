<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GoldenGrape's Blog</title><link>https://goldengrape.github.io/</link><description>This is a blog site for GoldenGrape.</description><atom:link href="https://goldengrape.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_cn</language><copyright>Contents © 2018 &lt;a href="mailto:https://twitter.com/goldengrape"&gt;Golden Grape&lt;/a&gt; </copyright><lastBuildDate>Fri, 02 Mar 2018 10:30:30 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>2018年刑侦推理试题解答</title><link>https://goldengrape.github.io/posts/python/CSI-exam/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;2018年刑侦推理试题: 
&lt;img src="https://i.loli.net/2018/03/01/5a982103b9db2.jpeg" alt="question.jpeg"&gt;
&lt;!-- TEASER_END --&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="解题思路"&gt;解题思路&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;以此题为例, 做一个简单的python小教程.&lt;/p&gt;
&lt;h3 id='提取"第x题的答案"'&gt;提取"第x题的答案"&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E6%8F%90%E5%8F%96%22%E7%AC%ACx%E9%A2%98%E7%9A%84%E7%AD%94%E6%A1%88%22"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;首先, 观察题目中经常出现的说法是: "第x题的答案"怎样怎样, 那么常用的一个过程就是要提取第x题的答案&lt;/p&gt;
&lt;p&gt;在python中可以使用的一个数据结构叫做列表list, 列表使用方括号括起来的一些元素, 要提取其中的内容用列表名[序号]就可以提取了. 比如&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# "#"号后面的部分是注释, 不会进入计算, 我后面会在程序中使用注释说明&lt;/span&gt;
&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# 注意python的计数是从第0项开始的, 所以第2项是2.3而不是1.2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt output_prompt"&gt;Out[1]:&lt;/div&gt;



&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;2.3&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;如果用数字0, 1, 2, 3来表示ABCD的话, 就可以把所有的答案放进一个列表里, 提取某一题的答案就是提取列表中的第几项, 注意python的列表是从第0项开始计数的, 为了读题中不引起混淆, 我将列表的第0项设定成空项.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [2]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 举例, 假设第1题到第5题的答案分别是AABDC, 用0, 1, 2, 3来表示ABCD&lt;/span&gt;
&lt;span class="n"&gt;sample_answer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# 提取第3题的答案&lt;/span&gt;
&lt;span class="n"&gt;sample_answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt output_prompt"&gt;Out[2]:&lt;/div&gt;



&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;1&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="第1题"&gt;第1题&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E7%AC%AC1%E9%A2%98"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;这道题的答案是: A.A, B.B, C.C, D.C&lt;/p&gt;
&lt;p&gt;题目中没有给出限定, 所以暂时先不管它&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="第2题"&gt;第2题&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E7%AC%AC2%E9%A2%98"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;第5题的答案是: A.C, B.D, C.A, D.B&lt;/p&gt;
&lt;p&gt;在第2题里, 如何描述A-&amp;gt;C,B-&amp;gt;D, C-&amp;gt;A, D-&amp;gt;B的映射关系呢? 可以用一个python一个数据结构叫做字典. 
字典是用{ }括起来的一组元素, 每一个元素里有一个key:value的数据对, 表示从key到value的映射&lt;/p&gt;
&lt;p&gt;那么要表示如何描述A-&amp;gt;C,B-&amp;gt;D, C-&amp;gt;A, D-&amp;gt;B的映射关系, 可以建立一个字典:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a2_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="c1"&gt;# A.C&lt;/span&gt;
         &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="c1"&gt;# B.D&lt;/span&gt;
         &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="c1"&gt;# C.A&lt;/span&gt;
         &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="c1"&gt;# D.B&lt;/span&gt;
&lt;span class="n"&gt;a2_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# 字典内容的提取, 是使用字典名[key],就可以提取出value&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt output_prompt"&gt;Out[3]:&lt;/div&gt;



&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;3&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;用0, 1, 2, 3代表ABCD&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果第二题选A, 那么就是说第5题的答案是C, 也就是a2_dict[0]的值2&lt;/li&gt;
&lt;li&gt;如果第二题选B, 那么就是说第5题的答案是D, 也就是a2_dict[1]的值3&lt;/li&gt;
&lt;li&gt;如果第二题选C, 那么就是说第5题的答案是A, 也就是a2_dict[2]的值0&lt;/li&gt;
&lt;li&gt;如果第二题选D, 那么就是说第5题的答案是B, 也就是a2_dict[3]的值2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;假定我们已经知道了所有的答案, 放在answer这个列表里, 那么第2题的答案是answer[2], 第5题的答案是answer[5],&lt;/p&gt;
&lt;p&gt;那么第2题的答案所对应的值就是a2_dict[ answer[2] ], 判断第2题是不是做对了, 就要看&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a2_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;是真还是假&lt;/p&gt;
&lt;p&gt;我将这个判断过程写成一个"函数", 这个函数负责看第2题是否做对了. python的函数定义是用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="err"&gt;函数名&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;参数表&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="err"&gt;空&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="err"&gt;格写函数内容&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="err"&gt;返回结果&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [4]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a2_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="c1"&gt;# A.C&lt;/span&gt;
             &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="c1"&gt;# B.D&lt;/span&gt;
             &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="c1"&gt;# C.A&lt;/span&gt;
             &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="c1"&gt;# D.B&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a2_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [5]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 一般写好一个函数, 应当测试一下是否写对了. &lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# 应当为假&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# 应当为真, 假定第2题的答案是0, 对应第5题的答案是2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;False
True
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="第3题"&gt;第3题&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E7%AC%AC3%E9%A2%98"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;以下选项中哪一题的答案与其他三项不同:
A. 第3题, B. 第6题, C. 第2题, D. 第4题&lt;/p&gt;
&lt;p&gt;当然我们可以去一个一个比对, 但python中对列表有一个简单的判断命令叫in,如果元素在这个列表中, 那么in命令就返回真, 否则为假.&lt;/p&gt;
&lt;p&gt;如果把第3题, 第6题, 第2题, 第4题的答案放在一个列表中, 那么有&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a3_list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;如果选A, 那么就看answer[3] in [            answer[6], answer[2], answer[4] ]是否为假&lt;/li&gt;
&lt;li&gt;如果选B, 那么就看answer[6] in [ answer[3],            answer[2], answer[4] ]是否为假&lt;/li&gt;
&lt;li&gt;如果选C, 那么就看answer[2] in [ answer[3], answer[6],            answer[4] ]是否为假&lt;/li&gt;
&lt;li&gt;如果选D, 那么就看answer[4] in [ answer[3], answer[6], answer[2]            ]是否为假&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了产生一个没有某一项的列表, 我们可以将列表中的某一项pop出去, 剩下的a3_list. 所以:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [6]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a3_list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="c1"&gt;# 先提取出来要检查的项&lt;/span&gt;
    &lt;span class="n"&gt;refer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a3_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="c1"&gt;# 在把这一项从列表里pop掉&lt;/span&gt;
    &lt;span class="n"&gt;a3_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    
    &lt;span class="c1"&gt;# 看看要检查的项是否在剩下的列表中&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;refer&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a3_list&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [7]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test3&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# 应当是真&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test3&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# 应当是假&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;True
False
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="第4题"&gt;第4题&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E7%AC%AC4%E9%A2%98"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;以下选项中哪两题的答案相同:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. 第1,5题 &lt;/li&gt;
&lt;li&gt;B. 第2,7题&lt;/li&gt;
&lt;li&gt;C. 第1,9题&lt;/li&gt;
&lt;li&gt;D. 第6,10题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这道题其实和第2题的思路一样, 建立一个映射关系的字典,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a4_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
             &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
             &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
             &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后验证题目中所说的东西即可.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果选A, 那么看a4_dict[0]中的两项[1, 5], &lt;ul&gt;
&lt;li&gt;其中1是a4_dict[0]这个列表的第0项, 第1题的答案就是&lt;code&gt;answer[ a4_dict[0][0] ]&lt;/code&gt; , &lt;/li&gt;
&lt;li&gt;其中5是a4_dict[0]这个列表的第1项, 第5题的答案就是&lt;code&gt;answer[ a4_dict[0][1] ]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果选B, 那么看a4_dict[1]中的两项[2, 7], &lt;ul&gt;
&lt;li&gt;其中2是a4_dict[0]这个列表的第0项, 第2题的答案就是&lt;code&gt;answer[ a4_dict[0][0] ]&lt;/code&gt; , &lt;/li&gt;
&lt;li&gt;其中7是a4_dict[0]这个列表的第1项, 第7题的答案就是&lt;code&gt;answer[ a4_dict[0][1] ]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [8]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a4_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
             &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
             &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
             &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
    
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;a4_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;a4_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [9]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;test4&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 应当为假&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;test4&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 应当为真&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;False
True
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="第5题"&gt;第5题&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E7%AC%AC5%E9%A2%98"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;以下选项中哪一题的答案与本题相同&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. 第8题,&lt;/li&gt;
&lt;li&gt;B. 第4题,&lt;/li&gt;
&lt;li&gt;C. 第9题,&lt;/li&gt;
&lt;li&gt;D. 第7题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;想必已经越来越熟练了, 先建立一个映射关系字典:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    a5_dict={0:8,
             1:4,
             2:9,
             3:7}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;本题的答案当然就是answer[5],&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果选A, 那么就是看第8题的答案, 也就是answer[ a5_dict[0] ]&lt;/li&gt;
&lt;li&gt;如果选B, 那么就是看第4题的答案, 也就是answer[ a5_dict[1] ]&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [10]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a5_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;a5_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [11]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test5&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# 应当为真, 第5题的答案与第8题都是A&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test5&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# 应当为假, 第5题的答案选的是B, 但与第4题的答案不同&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;True
False
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="第6题"&gt;第6题&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E7%AC%AC6%E9%A2%98"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;以下选项中哪两题的答案与第8题相同&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. 第[2,4]题,&lt;/li&gt;
&lt;li&gt;B. 第[1,6]题,&lt;/li&gt;
&lt;li&gt;C. 第[3,10]题,&lt;/li&gt;
&lt;li&gt;D. 第[5,9]题. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;出题人已经开始重复自己了, 这道题和第4题区别不大.&lt;/p&gt;
&lt;p&gt;建立一个映射字典:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    a6_dict={0:[2,4],
             1:[1,6],
             2:[3,10],
             3:[5,9]}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第8题的答案当然是answer[8],&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果选A, 那么answer[8]应当等于a6_dict[0]中的第2, 4题的答案, &lt;ul&gt;
&lt;li&gt;其中2是&lt;code&gt;a6_dict[0][0]&lt;/code&gt;, 第2题的答案也就是&lt;code&gt;answer[a6_dict[0][0]]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其中4是&lt;code&gt;a6_dict[0][1]&lt;/code&gt;, 第4题的答案也就是&lt;code&gt;answer[a6_dict[0][1]]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [12]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test6&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a6_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
             &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
             &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
             &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a6_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a6_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [13]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test6&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# 应当为真, 第6题选了A, 第8题的答案是A, 第2, 4题也选的是A&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test6&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# 应当为假, 第6题选了B, 第8题的答案是C, 第1, 6题选的不是C&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;True
False
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="第7题"&gt;第7题&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E7%AC%AC7%E9%A2%98"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;此十道题中, 被选中次数最少的选项字母为:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. C,&lt;/li&gt;
&lt;li&gt;B. B, &lt;/li&gt;
&lt;li&gt;C. A, &lt;/li&gt;
&lt;li&gt;D. D&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先建立个映射字典:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    a7_dict={0:2,
             1:1,
             2:0,
             3:3}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这道题开始有新花样了, "选中次数最少的字母", 那就要统计一下每个字母都被选中了多少次啊.&lt;/p&gt;
&lt;p&gt;列表里有个.count(value)方法, 可以统计出value在列表中出现了多少次. 所以:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字母A在答案中出现的次数=answer.count(0)&lt;/li&gt;
&lt;li&gt;字母B在答案中出现的次数=answer.count(1)&lt;/li&gt;
&lt;li&gt;字母C在答案中出现的次数=answer.count(2)&lt;/li&gt;
&lt;li&gt;字母D在答案中出现的次数=answer.count(3)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最少, 可以用min(列表)来表示, 那么各个字母出现次数中最少的数量: 
min( [answer.count(0),answer.count(1),answer.count(2),answer.count(3) ] )&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [14]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test7&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a7_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a7_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [15]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test7&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# 应当为真, 这里面所有的字母都只出现了1次&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test7&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# 应当为假, 1出现了两次, 比其他都多&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;True
False
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="第8题"&gt;第8题&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E7%AC%AC8%E9%A2%98"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;以下选项中, 哪一题的答案与第1题的答案在字母中不相邻:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. 第7题, &lt;/li&gt;
&lt;li&gt;B. 第5题, &lt;/li&gt;
&lt;li&gt;C. 第2题, &lt;/li&gt;
&lt;li&gt;D. 第10题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先建个映射关系:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a8_dict={0:7,1:5,2:2,3:10}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这道题说的是字母不相邻, 我们已经用数字0123表示字母ABCD了, 那么相邻, 就是相差为+-1喽, 或者是减完以后平方=1. python用&lt;code&gt;**&lt;/code&gt;表示平方, 用&lt;code&gt;!=&lt;/code&gt;来表示不等于&lt;/p&gt;
&lt;p&gt;第一题的答案是answer[1],&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果选A, 那么有&lt;code&gt;(answer[1]-answer[7])**2 !=1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果选B, 那么有&lt;code&gt;(answer[1]-answer[5])**2 !=1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [16]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test8&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="n"&gt;a8_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;a8_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [17]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test8&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;#应当为真, 第8题选了A, 第1题的答案是1, 与第7题的答案7不相邻&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test8&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;#应当为假, 第8题选了B, 第1题的答案是4, 与第5题的答案5相邻&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;True
False
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="第9题"&gt;第9题&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E7%AC%AC9%E9%A2%98"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;已知"第1题与第6题的答案相同" 与 "第x题与第5题的答案相同" 的真假性相反, 那么X为:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. 第6题 &lt;/li&gt;
&lt;li&gt;B. 第10题 &lt;/li&gt;
&lt;li&gt;C. 第2题&lt;/li&gt;
&lt;li&gt;D. 第9题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建立映射关系:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a9_dict={0:6,1:10,2:2,3:9}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;"第1题与第6题的答案相同", 这句话的逻辑值是answer[1]==answer[6]&lt;/p&gt;
&lt;p&gt;真假性相反用not表示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果选A, 那么X=6,  第6题与第5题的答案相同的逻辑值是answer[6]==answer[5],   那么not(answer[6]==answer[5])==(answer[1]==answer[6])&lt;/li&gt;
&lt;li&gt;如果选B, 那么X=10, 第10题与第5题的答案相同的逻辑值是answer[10]==answer[5], 那么not(answer[10]==answer[5])==(answer[1]==answer[6])&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [18]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test9&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a9_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a9_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [19]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test9&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# 应当为假, 第9题选了A, 第1题与第6题不同, 那么第6题应该和第5题相同才是真假性相反, 这里不满足&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test9&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# 应当为真, 第9题选了A, 第1题与第6题不同, 那么第6题应该和第5题相同才是真假性相反&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;False
True
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="第10题"&gt;第10题&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E7%AC%AC10%E9%A2%98"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;在此10道题中, ABCD四个字母出现此处最多与最少者的差为:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A.3&lt;/li&gt;
&lt;li&gt;B.2&lt;/li&gt;
&lt;li&gt;C.4&lt;/li&gt;
&lt;li&gt;D.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们已经胜利在望, 发现出题人也没有太多花招了. 这题和前面第7题很相似, 只是第7题计算了最少, 这里要计算最多了.&lt;/p&gt;
&lt;p&gt;既然最少可以用min(列表)来表示, 那么各个字母出现次数中最少的数量: min( [answer.count(0),answer.count(1),answer.count(2),answer.count(3) ] )&lt;/p&gt;
&lt;p&gt;那么最多当然用max(列表)来表示, 于是各个字母出现次数中最多的数量: max( [answer.count(0),answer.count(1),answer.count(2),answer.count(3) ] )&lt;/p&gt;
&lt;p&gt;建立映射关系:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a10_dict={0:3,1:2,2:4,3:1}&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [20]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test10&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a10_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;answer_count_list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; 
    &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;answer_count_list&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;answer_count_list&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a10_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [21]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test10&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;#应当为假, 第10题选了A, 最大最小要相差3, 但每个字母只出现了一次, 最大最小相差是0&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test10&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;#应当为真, 第10题选了A, 最大最小要相差3, 选1出现了3次, 选2, 3都没有, 最大最小相差是3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;False
True
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="穷举"&gt;穷举&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E7%A9%B7%E4%B8%BE"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;现在已经把上面10道题的判定函数都写好了. 要求解的答案就是要令上述10道题的判别函数都返回真的情况.&lt;/p&gt;
&lt;p&gt;10道单选题, 每道题可能有4种答案, 一共的可能性是
$$
4^{10}=1048576
$$&lt;/p&gt;
&lt;p&gt;看起来也不大, 所以就穷举好了. 最简单的方式就是for循环. 虽然也还有其他生成穷举序列的方法, 但本着"想到解法就先实现出来看看"的敏捷开发思路. 先用for循环吧.&lt;/p&gt;
&lt;p&gt;所谓for循环, 就是让一个变量依次取得列表中的所有值&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [22]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;test1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a1&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a2&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a3&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a4&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a5&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a6&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a7&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a8&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a9&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a10&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                                        &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
                                            &lt;span class="n"&gt;test1&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
                                            &lt;span class="n"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
                                            &lt;span class="n"&gt;test3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
                                            &lt;span class="n"&gt;test4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
                                            &lt;span class="n"&gt;test5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
                                            &lt;span class="n"&gt;test6&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
                                            &lt;span class="n"&gt;test7&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
                                            &lt;span class="n"&gt;test8&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
                                            &lt;span class="n"&gt;test9&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
                                            &lt;span class="n"&gt;test10&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
                                            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"That's all"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;['', 1, 2, 0, 2, 0, 2, 3, 0, 1, 0]
That's all
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="答案:"&gt;答案:&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/CSI-exam/#%E7%AD%94%E6%A1%88:"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src="https://i.loli.net/2018/03/01/5a9821ddb1dc7.jpg" alt="answer.jpg"&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
</description><category>python</category><guid>https://goldengrape.github.io/posts/python/CSI-exam/</guid><pubDate>Thu, 01 Mar 2018 15:30:00 GMT</pubDate></item><item><title>看《甄嬛传》学实验设计</title><link>https://goldengrape.github.io/posts/bulabula/learn-exp-design-from-zhenhuan/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;这是以前发在&lt;a href="https://www.guokr.com/blog/234438/"&gt;果壳日志&lt;/a&gt;上的, 但果壳放弃了日志, 并且缺乏打理, 以至于原来的图片链接都出错了. 以为找不到了, 还挺可惜的. 今天查文件时突然发现了以前的图片, 还是放在自己这里踏实.&lt;/p&gt;
&lt;p&gt;下面, 请扶稳坐好, 系好安全带, 我们一起看《甄嬛传》学实验设计:
&lt;!-- TEASER_END --&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p1.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p2.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p3.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p4.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p5.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p6.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p7.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p8.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p9.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p10.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p11.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p12.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p13.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p14.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p15.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p16.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p17.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p18.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p19.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p20.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p21.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p22.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p23.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p24.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p25.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/zhenhuan/p26.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;注：
本文依照电视剧中的情节假定滴血验亲是可靠的。
续：
如果更加严格的实验设计还需要有很多的步骤。
比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实验器材中，用普通的水是不行的。需要用等渗等张的平衡盐作为溶液。&lt;/li&gt;
&lt;li&gt;考虑到六阿哥的血比较宝贵，测量滴血验亲的敏感性和特异性的预实验是要提前完成的。&lt;/li&gt;
&lt;li&gt;样本量的估计。&lt;/li&gt;
&lt;li&gt;相融还是不相融看起来是个定性试验，还需要一个独立的读片人。&lt;/li&gt;
&lt;li&gt;考虑到宫闱斗争重重，随机和双盲是必要的。&lt;/li&gt;
&lt;li&gt;继续考虑宫闱斗争重重，实验样品的防伪与认证也是必要的，其中可能配合随机双盲要用到HASH算法和/或RSA加密。&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/bulabula/learn-exp-design-from-zhenhuan/</guid><pubDate>Thu, 01 Mar 2018 07:00:00 GMT</pubDate></item><item><title>VR／AR临床实验设计中的注意事项-太长不看版</title><link>https://goldengrape.github.io/posts/ophthalmology/vr-ar-exp-tldr/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;伴吐槽&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;前面那篇《&lt;a href="https://goldengrape.github.io/posts/ophthalmology/vr-ar-exp"&gt;VR／AR临床实验设计中的注意事项&lt;/a&gt;》文章太长了，以至于按照十五言的统计，“深读”率维持在10%以下，（那篇文章值一大笔顾问费的好么我为了国内的VR/AR社区就这么给捐了你们居然不仔细读）。因此作者推出了TL;DR版。&lt;/p&gt;
&lt;h3&gt;实验准备：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;伦理：不通过伦理委员会没签知情同意书，一告一个准；&lt;/li&gt;
&lt;li&gt;研究团队：就算企业出钱也得找些懂行的行家；&lt;/li&gt;
&lt;li&gt;实验设计：答辩叫defence，得尽量无懈可击才行；&lt;/li&gt;
&lt;li&gt;实验目的：一次一小步，题目太大就民科了；&lt;/li&gt;
&lt;li&gt;实验对象：纳入排除标准预先定，把搞不定的都排除在外&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;实验测量的指标：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;视力：用LogMAR&lt;/li&gt;
&lt;li&gt;CSF色觉能查就查一下&lt;/li&gt;
&lt;li&gt;屈光：电脑验光仪不准&lt;/li&gt;
&lt;li&gt;眼压：摊上青光眼就麻烦了&lt;/li&gt;
&lt;li&gt;干眼：用泪液分析仪&lt;/li&gt;
&lt;li&gt;双眼视、调节、斜视、AC/A、立体视：一般医生都搞不定，还是找专业人士玩&lt;/li&gt;
&lt;li&gt;问卷调查：青少年问卷调查你也信？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;数据：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;别作弊；&lt;/li&gt;
&lt;li&gt;画图得有error bar；&lt;/li&gt;
&lt;li&gt;科研图不准用3D，别扯什么信息图示；&lt;/li&gt;
&lt;li&gt;连个P都没有，怎么让人相信&lt;/li&gt;
&lt;li&gt;统计方法不对有个P用&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;结果与讨论：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;garbage in garbage out ;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;眼科与视光学专业的注意事项:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;硬件限制：人类科技还很低下；&lt;/li&gt;
&lt;li&gt;软件限制：别撞上NP hard；&lt;/li&gt;
&lt;li&gt;商业限制：医生想的通常不赚钱没人愿意做&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/ophthalmology/vr-ar-exp-tldr/</guid><pubDate>Wed, 28 Feb 2018 07:15:00 GMT</pubDate></item><item><title>VR／AR临床实验设计中的注意事项</title><link>https://goldengrape.github.io/posts/ophthalmology/vr-ar-exp/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;alpha版&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;声明&lt;/h2&gt;
&lt;p&gt;本文遵守创作共用-署名-非商用协议。&lt;/p&gt;
&lt;p&gt;本文不能作为临床研究的依据。&lt;/p&gt;
&lt;p&gt;本文不明确推荐具体商品。&lt;/p&gt;
&lt;p&gt;临床实验设计是一门独立的课程，有丰富的内容，本文仅能提供简单的介绍。&lt;/p&gt;
&lt;p&gt;觉得文章太长可以先看&lt;a href="https://goldengrape.github.io/posts/ophthalmology/vr-ar-exp-tldr/"&gt;《……太长不看版》&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;起因&lt;/h2&gt;
&lt;p&gt;看了未来影响高精尖创新中心的&lt;a href="https://mp.weixin.qq.com/s?__biz=MzIzODU5Mzk0OQ==&amp;amp;mid=2247484520&amp;amp;idx=1&amp;amp;sn=61d59675efbe7d3565f0761fbe8a6e2d"&gt;《长时间使用VR头戴显示设备对低年龄用户视力的影响测试报告》&lt;/a&gt; 。这个实验的目的是非常好的。游戏、教育都是VR/AR的重要应用领域，当前确实缺乏儿童使用VR/AR的临床研究，但该实验中仍然有很多需要改善的部分。&lt;/p&gt;
&lt;p&gt;VR/AR技术，特别是VR/AR显示技术与眼科学密切相关。除了对儿童视力影响的探索，2017年的ARVO会议上，孙兴怀教授团队也报告了利用video see-through技术进行弱视训练的研究（[^ARVO热点丨弱视治疗新进展：增强现实双眼分视训练]）。未来VR/AR有更多在眼科学上的应用。也会有更多的VR/AR企业需要进行医学相关的研究与实验。&lt;/p&gt;
&lt;p&gt;下面，我简单介绍下一个比较正规的VR/AR临床研究应该怎么做。&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;h2&gt;伦理&lt;/h2&gt;
&lt;p&gt;临床研究中，很重要的是要遵守临床研究的伦理。一个正规的临床实验是应当按照《赫尔辛基宣言》的要求进行实验设计并交由伦理委员会审议批准的。对于VR/AR企业一方面是合法合规做事，一方面也有一定的自我保护。&lt;/p&gt;
&lt;p&gt;相关的内容请查阅《赫尔辛基宣言》，其中最重要的原则，一是要首先考虑受试者的健康，二是知情同意原则。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;受试者的健康&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果VR/AR实验的实验对象是儿童，需要更严格的保护。已知的，可能对儿童的健康造成不利影响的事情都不应该做。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实验场地：应该有足够的防护，避免发生儿童磕碰的事故。&lt;/li&gt;
&lt;li&gt;实验软件设备：VR/AR游戏应选择与儿童年龄相称的游戏，避免血腥暴力恐怖等游戏。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实验硬件：应当适合儿童使用。其中应当注意VR/AR头戴显示器的瞳距是否可以供儿童使用。硬件瞳距的范围与被试的瞳距不相符时，会产生不良的健康影响，应当避免。例如HTC Vive的最小瞳距是60mm，那么瞳距&amp;lt;60mm的儿童就应当排除在实验之外。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;知情同意&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实验开始前，应当向实验对象讲解实验以及实验过程中可能出现的风险，取得实验对象的同意后，才可以进行实验。如果实验对象是儿童，除了向儿童本人讲解实验过程和注意事项，还需要向儿童的监护人，也就是家长和老师讲明，并且应当签署正式的知情同意书。&lt;/p&gt;
&lt;p&gt;所以在实验设计好以后，知情同意书也需要同时设计好，并且一并交给伦理委员会审议批准。&lt;/p&gt;
&lt;h2&gt;研究团队&lt;/h2&gt;
&lt;p&gt;研究团队中是可以有企业参与的，并且也可以由企业提供资金进行。但是需要在实验发表时公开披露。资金有企业来源的，往往会被解读为广告。&lt;/p&gt;
&lt;p&gt;由于实验数据的测量中会使用大量眼科专业设备，并需要专业测量技能，所以建议研究团队中应当有视光学背景的专业人士，例如眼科医生、验光师。&lt;/p&gt;
&lt;p&gt;实验数据的处理与解读可能也需要统计学或流行病学专业人士的协助。&lt;/p&gt;
&lt;h2&gt;实验设计&lt;/h2&gt;
&lt;p&gt;临床研究面向的对象都是人。与程序员面对的抽象对象、硬件工程师面对的硬件模块不同。人是非常复杂的，对人的测量往往具有极大的误差。与机械加工中的公差分析是不同的。&lt;/p&gt;
&lt;p&gt;对测量人体生理、心理指标的误差，工程师很可能是估计不足的。程序员大概无法想象每个unitTest的返回值都会先经过一个不一定是正态分布的随机数处理一遍的系统，这才是人类。&lt;/p&gt;
&lt;p&gt;临床实验设计就是要尽量排除人为的影响。需要设定对照组，可能需要设盲，实验对象的数量也有一定的要求。不同的实验设计，能够提供证据的强度也不一样。一般来说，一次实验最可信的是大规模多中心的随机双盲实验（RCT）。实验设计是一门课程，有很多书籍和公开课可供参考，也有专业的CRO公司提供相关的服务。&lt;/p&gt;
&lt;p&gt;简单的说，实验中一切的人类都是坏人，你的实验对象可能会有意无意说谎，可能突然就退出实验；你的助手可能有意无意记录错误的数据，在模棱两可的时候故意偏向错误；其中最坏的就是设计者你本人，有些事情如果被你预先知道，你就会压迫助手，欺负实验对象，使他们屈从于你，产生错误的结果。实验设计的目的就是向大家公布，我们都这么坏了，但由于严谨的实验设计，我们实在无法钻空子作假。&lt;/p&gt;
&lt;h2&gt;实验目的&lt;/h2&gt;
&lt;p&gt;做过科学研究的人知道，实验的目的不可求大，不要妄图在一个实验中解决庞大的问题。比如“对视力的影响”其实是个很庞大的范畴。实验目的需要尽量清晰明确地定义。当然在收集数据的时候可以尽量全一些，同一个临床实验可以产生很多不同目的的文章。&lt;/p&gt;
&lt;h2&gt;实验对象&lt;/h2&gt;
&lt;p&gt;实验对象是需要经过选择的，但是应当有明确合理的纳入标准和排除标准。&lt;/p&gt;
&lt;p&gt;纳入标准，应当是能够代表总体的样本标准。比如随机抽取某个学校一个年龄段的学生。但纳入标准如果不合适则可能造成“选择偏倚“。&lt;/p&gt;
&lt;p&gt;排除标准，至少应当把可能会因为VR/AR造成损伤的被试排除在外。&lt;/p&gt;
&lt;p&gt;比如有感染性眼病的患者可能因为共用VR/AR头戴显示器而传播疾病，斜视的患者在使用VR/AR后更容易产生疲劳，前庭功能障碍的患者可能在使用VR/AR时更容易眩晕，癫痫的患者也许会在VR/AR场景中被诱发等等。不过有些实验可能就是为了使用VR/AR来治疗某种疾病，那么就需要依照具体情况来确定排除标准了。&lt;/p&gt;
&lt;p&gt;即使是正常人，也需要有一定的限制，比如儿童的瞳距不同，对于硬件瞳距不能适应的儿童，瞳距不合适更容易加重视疲劳，影响实验的准确性。应当排除在实验之外。&lt;/p&gt;
&lt;p&gt;实验对象的数量，要根据所测量的指标来定。不同的测量指标分布是不同的，离散程度、误差等也不同，为了最终可以得到有意义的比较结果，需要高于一定的数量。但实验对象太多了，物资成本和时间成本又会飙升。具体的样本量估计的方法，请查阅相关的统计学教程。&lt;/p&gt;
&lt;p&gt;在选择儿童作为实验对象的时候，还应当考虑到儿童心理、生理发育的影响。比如年龄过小的儿童，很可能无法理解实验员的解说，或者要让儿童长时间保持注意力集中，难度极大。另外，儿童或青少年也许会以破坏规则作为乐趣。&lt;/p&gt;
&lt;p&gt;对于眼睛，不同年龄的儿童也是不同的。人眼睛8岁的时候才达到正常眼轴的长度。6岁的孩子可能还有+1.50D左右的远视，10岁的孩子也可能有+1.00D的远视。&lt;/p&gt;
&lt;h2&gt;实验测量的指标&lt;/h2&gt;
&lt;p&gt;视觉是一组互相关联的知觉，有物理成像的过程，有心理知觉的过程，有认知处理的过程，还有人体反馈的过程。测量的方式也有客观和主观测量的不同。需要根据实验目的和实验的实际情况来选择。&lt;/p&gt;
&lt;h3&gt;视力&lt;/h3&gt;
&lt;p&gt;检查的是人眼的角度分辨能力。看起来测量视力很简单，只要对着视力表指指点点，让被试指出方向即可。但其中仍然有很多需要注意的地方。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;视力表的选择。医院里检查常用的是Snellen视力表，或标准对数视力表。记录方式是1.5、1.0之类的小数记录。这种视力表使用方便，在临床中很常用，但并不适合科学研究。人类的感觉信号通常是对数编码的，还受到周围环境的影响，并不是简单的线性系统。使用Snellen视力表测量后很难进行统计分析，测量过程也容易受到干扰。所以真正发表科研论文时，应当使用LogMAR进行记录和分析，使用的是&lt;a href="https://en.wikipedia.org/wiki/LogMAR_chart"&gt;LogMAR视力表&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;检查环境。视力的测量对周围环境光、灯箱的背景光都是有严格要求的。需要按照视力表中所标注的要求进行设定。&lt;/li&gt;
&lt;li&gt;检查过程。恐怕很多实验设计者已经忘记了自己小时候体检测视力的过程，如果排成一队依次检查。实际过程是，很多孩子在看视力表之前已经将下面几行熟记于心了。或者后面的孩子会在被检查者的后背上画出结果来。即使是使用了新的LogMAR视力表，如果检查后的孩子回到未检查的队伍中，信息也会很快传开。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;对比敏感度（CSF）&lt;/h3&gt;
&lt;p&gt;视力测量只测量了黑白分明时候的角分辨能力。但日常生活中这种情况并不是常规。有些人视力检查结果很好，但却在黄昏不敢走楼梯，因为在暗环境下的分辨力下降了。这就要用对比敏感度来测了。不严格地用工科概念的类比，相当于在测量系统的调制传递函数MTF。（CSF近似于成像的MTF乘以神经系统处理的MTF）&lt;/p&gt;
&lt;p&gt;对比敏感度的测量比测量视力要时间长一些。可以用灯箱，也有更为紧凑的仪器可供使用。&lt;/p&gt;
&lt;h3&gt;色觉&lt;/h3&gt;
&lt;p&gt;色觉的检查一般是使用印刷的色盲本。这种检查只能对色觉作出粗略的定性分析。但对于VR/AR实验可能不够。如果使用计算机屏幕进行色觉的模拟，需要注意不同的屏幕对颜色的显示能力是不同的，要看屏幕对与CIE颜色空间的覆盖程度。&lt;/p&gt;
&lt;h3&gt;屈光状态&lt;/h3&gt;
&lt;p&gt;电脑验光仪可以迅速检查被试的屈光状态，是近视、远视以及是否有散光，散光的轴位。但是电脑验光仪的重复性稍差，容易受到调节的影响，其中球镜部分（也就是近视远视）的可信度低，散光稍好。更好的测量方式是使用综合验光仪进行显然验光，但显然验光的过程较长，如果需要在短时间内测量大量的被试，需要在准确性和时间之间作出选择。&lt;/p&gt;
&lt;p&gt;标准的屈光状态记录方式是：&lt;/p&gt;
&lt;p&gt;OD: 裸眼视力，近视／远视度数 DS≎散光度数DC X 散光角度，矫正视力&lt;/p&gt;
&lt;p&gt;OS: 裸眼视力，近视／远视度数 DS≎散光度数DC X 散光角度，矫正视力&lt;/p&gt;
&lt;p&gt;右眼、左眼、双眼的缩写分别是OD、OS、OU。&lt;/p&gt;
&lt;p&gt;例如，右眼裸眼视力0.6，有100度近视，75度近视散光，轴位在70度，戴镜矫正后视力可以达到1.0，&lt;/p&gt;
&lt;p&gt;可以记录为：VOD: 0.6 -1.00DS≎ -0.75DC X 70° → 1.0&lt;/p&gt;
&lt;h3&gt;眼压&lt;/h3&gt;
&lt;p&gt;眼球是一个有弹性的球体，里面填充的是液体。内部是有压力的。眼压是由房水动态调节的，一部分人眼压调节能力失调，产生了青光眼，其中闭角型青光眼应当避免暗环境，以免瞳孔扩张后引起眼压突然升高。&lt;/p&gt;
&lt;p&gt;测量眼压可以用气动眼压或接触眼压计来测量。&lt;/p&gt;
&lt;h3&gt;泪液&lt;/h3&gt;
&lt;p&gt;眼泪的多寡常常会影响到视觉疲劳状态和视觉质量。比如视疲劳中常见的描述往往会有眼睛"干涩"，就是与泪液分泌有关。&lt;/p&gt;
&lt;p&gt;泪液常用的测量是Schimmer实验和BUT实验。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Schimmer实验是在下眼睑边缘挂一个滤纸，给定时间以后测量泪液浸润的距离。但这个实验对操作要求高，误差大。&lt;/li&gt;
&lt;li&gt;BUT实验是测量泪膜破裂时间，在眼内点上荧光素，在裂隙灯下观察泪膜上第一个暗区出现的时间。要注意的是荧光素试纸容易污染。也有人使用电脑验光仪进行粗略的估计。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在有眼表分析仪可以测量BUT、泪河宽度、睑板腺状态等。&lt;/p&gt;
&lt;h3&gt;双眼视觉&lt;/h3&gt;
&lt;p&gt;人的眼睛有一双，有很多功能是双眼协调使用时才表现出来。双眼视觉的功能测量，例如：调节幅度、调节灵敏度、聚散储备、调节集合比等也需要测量，可能需要使用综合验光仪进行。&lt;/p&gt;
&lt;h3&gt;调节&lt;/h3&gt;
&lt;p&gt;在进行视疲劳的研究时，应当测量被试的调节。这是一个客观的指标。在给予不同刺激后，调节的变化过程可以提示很多信息。眼内睫状肌的疲劳程度也可以以此反应。当前已经有测量调节的仪器，相当于高速连续进行电脑验光。&lt;/p&gt;
&lt;p&gt;调节的测量中还应当使用综合验光仪测量被试的调节幅度。&lt;/p&gt;
&lt;h3&gt;眼球运动&lt;/h3&gt;
&lt;p&gt;斜视的患者应当排除在实验之外，简单的遮盖去遮盖查实验可以发现一部分斜视患者。但如果没有检查，隐斜的患者可能不容易发现，这部分人能够用肌肉控制住斜视，在注视目标时并不会表现出来，但容易出现视疲劳。&lt;/p&gt;
&lt;p&gt;人眼在看近处物体双眼向内聚的动作为集合，集合有一定的限度，集合广度、聚散力，聚散储备也可能需要测量。&lt;/p&gt;
&lt;h3&gt;AC/A&lt;/h3&gt;
&lt;p&gt;人眼在看近处物体双眼向内聚，这个动作称为集合（Accommodative convergence，AC），同时会动用调节（accommodation，A）改变眼球焦距，使人眼能够清晰对焦。进化使这两个动作是联动的，一旦双眼向内看，会自动启动调节。&lt;a href="https://www.aao.org/bcscsnippetdetail.aspx?id=16eb0f96-fa78-436b-8841-e4a5fc8a622c"&gt;AC/A&lt;/a&gt;可近似视为常数。（会有随年龄的变化，但短时间内可视为不变量）&lt;/p&gt;
&lt;p&gt;在当前的VR/AR设备中，仅仅使用一个平面上的显示器来显示物体，所以人眼在看时AC是有的，A则不一定变化，调节集合反射被破坏了。这是当前VR/AR设备中未能解决的技术困难，有可能未来通过光场显示、高速变焦显示等方法来解决。&lt;/p&gt;
&lt;p&gt;AC/A数值是可以测量的，AC/A自身异常的人可能也需要排除在实验对象之外。&lt;/p&gt;
&lt;h3&gt;立体视&lt;/h3&gt;
&lt;p&gt;VR/AR由于显示时区分了左右眼，所以能够产生双眼立体视觉。已经比眼科常用的立体视检测手段更高级了。但当前VR/AR头戴式显示器与人眼的视野范围还不一致。人眼的视野范围一般是内侧60度，外侧90度，VR头戴显示器常常会标出一个对角线视角，比如100度，但当前的硬件设备中，双眼内侧常见是使用挡板隔开的，内侧视野不足60度，那么可能对于立体视觉的感知区域就与实景中是不同的。&lt;/p&gt;
&lt;p&gt;VR之外还有AR／MR，在与实景交互时，需要知道人感觉到物体空间位置和真实位置之间是否一致，差异有多少。这部分并没有现成的眼科测量手段可用。但也有很多文献做了探索，比如移动实物去对齐虚拟场景中的物体。&lt;/p&gt;
&lt;p&gt;注意，当VR/AR技术进步到复杂的光场技术甚至全息技术时，测量的可能就是“单眼的立体视”了，也就是所谓的调节线索，物体远近不同时，人眼对焦到一处时另一处可能是模糊的。如何判定系统真的表现出了这种调节线索，如何客观测量，如何定性、定量分析，需要进一步的研究。&lt;/p&gt;
&lt;h3&gt;问卷调查&lt;/h3&gt;
&lt;p&gt;视觉是个知觉过程，其中必然还要涉及到很多人脑分析的部分，会得出许多主观、客观混合的指标，比如“舒服“、"疲劳"、"不适"等等，其中一部分客观指标可以测量，但也有可能需要通过问卷进行调查。&lt;/p&gt;
&lt;p&gt;问卷调查之中有很多学问，问卷应尽量使用成熟的量表。&lt;/p&gt;
&lt;p&gt;在VR/AR实验中，有一些需要注意的地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果被试是儿童或者青少年，要注意儿童的认知理解能力，是否可以使用特定的问卷。&lt;/li&gt;
&lt;li&gt;被试的配合程度。儿童和青少年是否愿意如实回答问卷中的问题。&lt;/li&gt;
&lt;li&gt;问卷是使用笔试还是口头测试？笔试的好处是速度快，可以同时多线程处理很多被试。但如果是被试自己阅读答题，这一过程本身也是一次视近操作的过程。测量过程也会影响视疲劳的程度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;数据的记录、处理、统计分析与展示&lt;/h2&gt;
&lt;p&gt;这些都是统计学里讲到的内容，请查阅相关的统计学教程或者公开课。或者请专门的统计学老师进行指导。&lt;/p&gt;
&lt;p&gt;基本的原则是：正心诚意。坦然接受客观的实验结果。特别是对于企业，实验结果对于未来多年的研发有指导意义，操纵数据无异于拿着坏掉的罗盘指路。&lt;/p&gt;
&lt;p&gt;由于一切都是采样，一切都有误差，将两组数据的平均值直接比较，说谁比谁大，谁比谁好，是完全没有意义的。&lt;/p&gt;
&lt;p&gt;由于一切都是采样，一切都有误差，画柱状图不标出error bar，直接比较谁比谁高，是完全没有意义的。&lt;/p&gt;
&lt;p&gt;使用3D统计图容易使读者产生误判，不应出现在正规的临床研究中。&lt;/p&gt;
&lt;p&gt;漂亮的信息图示，比如用人物剪影的大小代表数量的多少，容易使读者产生误判，不应出现在正规的临床研究中。&lt;/p&gt;
&lt;p&gt;虽然很多新闻报道中在批判科学家们对P&amp;lt;0.05的迷思，但假设检验仍然是得出结论的必由之路。没有经过统计学的假设检验，就声明两组数据谁比谁好，是没有意义的。与理工科的文章不同，生物医学文章里如果连个P都没有出现，读者是不会相信文章内容的。&lt;/p&gt;
&lt;p&gt;即使使用了统计学假设检验，要注意假设检验的方法是有不同的适用条件的，不满足适用条件而使用是错误的，得出的结论也是没有意义的。&lt;/p&gt;
&lt;p&gt;很多假设检验的方法要求数据来自于正态分布的总体，但不是所有的数据都是正态分布的，比如用小数记录的视力，就不一定是正态分布。不是正态分布的数据，平均值和标准差并不能反映数据的特征。&lt;/p&gt;
&lt;h2&gt;结果与讨论&lt;/h2&gt;
&lt;p&gt;实验的结果只能由经过统计学假设检验后的结果给出。&lt;/p&gt;
&lt;p&gt;比如说实验对象使用VR/AR以后，视力有改变。不是说实验对象使用VR/AR前的平均视力是多少，使用后的平均视力是多少，两者一减，发现平均视力提高了，就是视力变好，平均视力降低了，就是视力变差。&lt;/p&gt;
&lt;p&gt;如前所述：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;是否有足够多数量的被试？只有几个人是没意义的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视力表用的是什么视力表，记录方式是不是LogMAR直接导致了是否可以用“平均“数来比较。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查视力的手段是否可靠，使用前查完视力以后，孩子们聚在一起编了个视力表歌谣，把视力表背得滚瓜烂熟，不管用不用VR/AR，第二次检查肯定提高了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视力检查的数据是否是正态分布，是否满足正态分布的检验。如果不满足，可能要经过处理，比如取log之类，使偏态分布转变成正态分布。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果数据是正态分布，被试眼数量有50，比较使用VR/AR之前和之后的视力，通常是应该使用配对t检验。如果此时选择非参数检验，个人认为可能有作弊之嫌。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当看到配对t检验的结果表明差异有显著性以后，才能说明在多大的错误概率内，使用VR/AR会改变视力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用二维的柱状图展示使用VR/AR前后的数据，并且每个柱状图上应当用error bar标记出标准差。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上述环节中某一个步骤出错或者不够严谨，都不能够得出有效的结论。&lt;/p&gt;
&lt;h2&gt;眼科与视光学专业的注意事项&lt;/h2&gt;
&lt;p&gt;以上是针对软件硬件工程师提出的一些注意事项。反过来，对于眼科学、视光学专业的医生、研究生，在设计实验时也有一些注意事项&lt;/p&gt;
&lt;p&gt;如果没有软件和硬件开发的经验，眼科与视光学专业人士可能也很难理解VR/AR开发中的困难。如果你在跟工程师或者程序员交流时使用了“……就行了“，"只要……了呗"这样的句式，通常你的想法是错的。&lt;/p&gt;
&lt;h3&gt;硬件的限制：&lt;/h3&gt;
&lt;p&gt;现阶段（2017年中），VR/AR所能呈现的视觉效果距离真实或者说人眼能够区别的极限，还有相当远的距离。工程师所制造的产品是在性能与成本中尽量取得平衡。超越当前技术水平的硬件，有些理论上有、新闻上有，但由于未进入主流市场生产量小，价格极高。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;透镜像差：这一点无需赘述。出于重量考虑，VR设备还有可能使用菲涅耳透镜，其像差估计和计算可能会更复杂。&lt;/li&gt;
&lt;li&gt;分辨率：常见的屏幕分辨率大约是400-600ppi，也就是每英寸25.4mm上有400-600个点。如果通过透镜成虚像在2M之外，角分辨率远远不能满足1.0视力的要求。(索尼另算)&lt;/li&gt;
&lt;li&gt;采样定理：屏幕像素是一格一格的，屏幕能够满足1.0视力的要求，不一定能够显示出0.9和1.2的视标。至少要满足最高频率的2倍。&lt;/li&gt;
&lt;li&gt;刷新率：屏幕的显示图像的速度，一般是每秒钟60幅，也就是60FPS，近期可以达到90FPS&lt;/li&gt;
&lt;li&gt;颜色：液晶显示器使用RGB三种颜色来组合产生色觉，显示器所能够产生的颜色要比人眼在真实生活中感知到的颜色少很多。&lt;/li&gt;
&lt;li&gt;亮度：液晶显示器在屏幕背面使用LED经过匀光板产生照明，照明的亮度是有限的。匀光板不一定能够产生均一的照明，也就是说屏幕一侧与屏幕另一侧的亮度可能是不一致的，差距需要实际测量。&lt;/li&gt;
&lt;li&gt;Gamma校正：屏幕的亮度不一定是与像素的数值是成正比的，比如屏幕像素上黑色=0，白色=255，那么灰色128和密集排列黑白从远处看可能是不相同的。&lt;/li&gt;
&lt;li&gt;衍射：透明的液晶屏相当于密集的光栅，会产生明显的衍射效应。&lt;/li&gt;
&lt;li&gt;可视角度：从不同的角度去观察液晶屏幕，颜色和亮度可能不一样。&lt;/li&gt;
&lt;li&gt;公差：制造有误差。降低误差成本会迅速提高。&lt;/li&gt;
&lt;li&gt;良品率：一种东西实验室作出了可用的一件，不等于工厂里能够生产出高质量的成千上万件。&lt;/li&gt;
&lt;li&gt;遮光：市售AR设备没有能够遮挡自然光的能力。在外界实景上只能加图像，不能减图像。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;软件限制：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;软件很贵，购买软件和生产软件都很贵。&lt;/li&gt;
&lt;li&gt;程序员不一定会修电脑。&lt;/li&gt;
&lt;li&gt;程序运算需要时间，屏幕上像素越多，需要的时间越多。有可能无法达到需要的要求。&lt;/li&gt;
&lt;li&gt;计算一个事情花的时间，可能跟处理的数据量成正比，复杂度叫O(N)，也可能需要处理的数据量的平方成正比，O(N^2)，甚至复杂度是非多项式时间，例如$ 2^{O(N)} -&amp;gt; O(N!)$，这种难度与抢银行相当。&lt;/li&gt;
&lt;li&gt;计算机的内存有限制。比如要计算一个1k屏幕上点与另一个屏幕上点的两两组合，需要$(10^3 \times 10^3)^2 \times 4 = 4 \times 10^{12} =4TB $&lt;/li&gt;
&lt;li&gt;不同语言写出的程序运算速度不同。&lt;/li&gt;
&lt;li&gt;深度学习很贵。&lt;/li&gt;
&lt;li&gt;人月神话：3个人干3个月的事情，9个人可能要干2.5个月。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;商业限制：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;疾病发生率常以万分之几、十万分之几计算，玩游戏的人口则安百分之几计算，中间差很多数量级。玩游戏的人才是推动硬件进步的力量，玩游戏的人多了才有VR/AR治病。&lt;/li&gt;
&lt;li&gt;全国眼科医生不超过2-3万名。&lt;/li&gt;
&lt;li&gt;并不是所有人都花钱买软件。&lt;/li&gt;
&lt;li&gt;产品经理答应的事情，程序员和硬件工程师不一定能做出来。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://mp.weixin.qq.com/s?timestamp=1494925011&amp;amp;amp;src=3&amp;amp;amp;ver=1&amp;amp;amp;signature=Aqr44BaRoB3kb12tDXee8w3VbWbQbwLIFTcE32CLFShBua9Y2AZKSCll67lIKyP-4Jg11gHUTB8lRnSiNmHIhSrL2j3v66BCOVW6u9P3LJo3KaWt1jPnGf31SPKO1YnOm-zuWfQ2vB*Gsv2lKQeBxZWvVqQTzZxQhRbtvCbqGCI="&gt;ARVO热点丨弱视治疗新进展：增强现实双眼分视训练&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;统计分析： https://zh.coursera.org/specializations/jhu-data-science&lt;a href="https://zh.coursera.org/specializations/jhu-data-science"&gt; 第 6 门课程 Statistical Inference&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;《双眼视觉学》，ISBN 978-7-117-14654-8/R*14655&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/ophthalmology/vr-ar-exp/</guid><pubDate>Wed, 28 Feb 2018 07:00:00 GMT</pubDate></item><item><title>毛笔字粗浅研究(1)--硬件搭建</title><link>https://goldengrape.github.io/posts/bulabula/brush-pen-research-1-hardware/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;这是春节假期的娱乐项目. 我做了一个能够模仿手腕运动能力的绘图仪. 真正的快乐还是来自于创造的过程啊.&lt;/p&gt;
&lt;p&gt;&lt;img alt="brush" src="https://i.loli.net/2018/02/26/5a92e3ad29971.jpg"&gt;
&lt;!-- TEASER_END --&gt;&lt;/p&gt;
&lt;p&gt;主体的部分来自于&lt;a href="http://learn.makeblock.com/cn/xy-plotter-robot-kit/"&gt;makeblock的xy plot&lt;/a&gt;. 在此称赞一下makeblock的机械部分, 铝制的框架比小时候玩的上海玩具十七厂的"创"系列要精巧不少, 而且设计上也要好很多. 精度和强度也高出不少. 我觉得在某些情况下甚至可以考虑直接用到光学平台上了.&lt;/p&gt;
&lt;p&gt;原作的绘图仪有两个步进电机和一个舵机控制, 步进电机控制xy平面上的移动, 舵机控制笔的抬起和放下.&lt;/p&gt;
&lt;p&gt;&lt;img alt="xy plotter" src="http://learn.makeblock.com/cn/wp-content/uploads/2016/01/KM2EQ92AMSKANCMBV8.png"&gt;&lt;/p&gt;
&lt;p&gt;这个结构用来写钢笔字是可以的, 因为并不需要控制笔管的方向. 但写毛笔字不够, 如前一篇&lt;a href="https://goldengrape.github.io/posts/bulabula/brush-pen-research-0"&gt;毛笔字粗浅研究00&lt;/a&gt;中所描述的, 在写毛笔字时要通过手腕的运动, 控制毛笔的倾倒, 以使笔锋能够行走在笔画的中央.
&lt;img alt="侧锋" src="https://goldengrape.github.io/images/%E4%BE%A7%E9%94%8B.png"&gt;&lt;/p&gt;
&lt;p&gt;所以, 除了笔管在xy方向上的运动, 还需要能够控制笔管的倾侧. 当然笔在运行时还有轻重, 也就是在z轴方向的运动.&lt;/p&gt;
&lt;p&gt;于是, 执笔的部分是这样的:&lt;/p&gt;
&lt;p&gt;&lt;img alt="执笔 v51" src="https://i.loli.net/2018/02/26/5a92ecc591527.png"&gt;&lt;/p&gt;
&lt;p&gt;由3个舵机来控制, 最上方的舵机配合一个齿轮来控制z轴的运动,下方是由两个舵机组成的两自由度控制部分, 这样笔管就可以向各个方向倾倒. 整体再通过螺丝连接到xy plotter的其他部分上(青色的梁).&lt;/p&gt;
&lt;p&gt;需要控制的电机一共有5个:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个步进电机控制xy平面上的运动.&lt;/li&gt;
&lt;li&gt;三个舵机控制笔管的倾斜和z轴的运动.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对比一下其他常见的机械臂, 一般最少也是6个自由度的.
&lt;img alt="6 DOF" src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9b/Robot_arm_model_1.png/640px-Robot_arm_model_1.png"&gt;&lt;/p&gt;
&lt;p&gt;那么缺少的是什么呢? 仔细看一下, 会发现没有毛笔的笔管绕自身长轴的旋转. 在&lt;a href="https://www.youtube.com/playlist?list=PL54cajc78e_S8g1Ow2r3epz9GfDLu6iKT"&gt;黄简讲书法课程&lt;/a&gt;中, 要求对笔的控制是&lt;a href="https://youtu.be/F6-fEdG6n48?list=PL54cajc78e_S8g1Ow2r3epz9GfDLu6iKT&amp;amp;t=760"&gt;通过手腕而不是手指&lt;/a&gt;, 如果使用手指, 那么就可以在一定范围内完成笔管绕自身长轴的旋转, 大约有+/-90度, 如果禁止, 那么就丢失了一个自由度.
&lt;img alt="屏幕快照 2018-02-26 01.13.48" src="https://i.loli.net/2018/02/26/5a92eef28774b.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://grabcad.com/library/chinese-brush-holder-1"&gt;3D模型下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;实际操作中, 稳定z轴移动的两个圆柱不是打印的, 而是用纸卷的, 其实用A4纸裁好尺寸, 然后卷成足够紧密的纸卷, 外表再用胶带粘好, 还是很结实的, 而且表面光滑, 比打印一个轴效果更好.&lt;/p&gt;
&lt;!-- EOF --&gt;&lt;/div&gt;</description><category>Art</category><guid>https://goldengrape.github.io/posts/bulabula/brush-pen-research-1-hardware/</guid><pubDate>Sun, 25 Feb 2018 16:20:00 GMT</pubDate></item><item><title>写春联</title><link>https://goldengrape.github.io/posts/bulabula/Write-Spring-Festival-couplets/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;学了几个月书法, 想自己写春联, 奈何实在技艺太差, 估计要再练上5年才能拿得出手. 于是只好借助一些辅助工具强行提升.
&lt;!-- TEASER_END --&gt;&lt;/p&gt;
&lt;h2&gt;目的:&lt;/h2&gt;
&lt;p&gt;手写一副还算好看的春联.&lt;/p&gt;
&lt;h2&gt;材料:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;对联纸, 毛笔, 墨汁, 毛毡等&lt;/li&gt;
&lt;li&gt;&lt;a href="http://shufa.farig.net"&gt;云章书法字典&lt;/a&gt;或其他书法字典&lt;/li&gt;
&lt;li&gt;iPad或打印机&lt;/li&gt;
&lt;li&gt;纸, 2B铅笔或复写纸&lt;/li&gt;
&lt;li&gt;&lt;a href="http://duilian.msra.cn"&gt;微软对联&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;方法:&lt;/h2&gt;
&lt;p&gt;上网搜些春联, 或者如果自己有要求, 需要植入特定的字词, 可以利用微软对联拓展思路, 生成合适的内容.&lt;/p&gt;
&lt;p&gt;用书法字典找到相应的字, 推荐颜真卿老师, 褚遂良老师的楷书. 至少在楷书里, 这两位的字比较全, 比较多, 容易找到所有需要的字. 而且形貌端正, 乍一看比较好写.&lt;/p&gt;
&lt;p&gt;&lt;img alt="找到合适的字" src="https://i.loli.net/2018/02/11/5a8058b146724.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;用纸蒙在iPad上把字的中线勾勒出来. 或者存成图片以后打印出来也行.
&lt;img alt="勾勒中线" src="https://i.loli.net/2018/02/11/5a8058b1ea6a1.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;在纸的背面用2B铅笔涂黑, 跟垫上复写纸一样, 铅笔的颜色反正是黑的, 墨汁染过以后看不出来, 复写纸应该比较省事, 但不知道效果如何.&lt;/p&gt;
&lt;p&gt;&lt;img alt="背面用2B铅笔涂色" src="https://i.loli.net/2018/02/11/5a8058b18ff2a.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;拿勾好中线的纸覆盖在对联纸上, 找好位置, 用圆珠笔画一遍中线, 将铅笔印在对联纸上.
&lt;img alt="用圆珠笔再画一遍中线" src="https://i.loli.net/2018/02/11/5a8058b19ca65.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="印在对联纸上" src="https://i.loli.net/2018/02/11/5a8058b1b1ff4.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;最后, 就是拿起毛笔, 依照"复印"的笔画中线写好就行了呗.
(当听到"...就行了", "...了呗", 之类的话语, 其中一定有坑. )&lt;/p&gt;
&lt;h2&gt;结果:&lt;/h2&gt;
&lt;p&gt;&lt;img alt="WechatIMG1" src="https://i.loli.net/2018/02/11/5a8058c8d4a09.jpeg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上联: 天地和顺人美慧&lt;/li&gt;
&lt;li&gt;下联: 平安如意家进宝&lt;/li&gt;
&lt;li&gt;横批: 嘉礼有妙&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;讨论:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;笔画的书写上还是需要一些基本技巧, 请参考&lt;a href="https://www.bilibili.com/video/av12995260/"&gt;黄简讲书法初级课程&lt;/a&gt;. 虽然上面的方法是投机取巧, 不过笔法-&amp;gt;笔势-&amp;gt;裹束, 要到裹束以后才能完成一个字的书写, 那已经是三级课程了. 所以借助复印笔画中线的方法, 相当于只练习笔法了.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;写毛笔字也还是需要器材的, 挑好一支大小合适有尖峰好写的毛笔, 还是挺困难的. 而且每到临近春节, 指望网上购物是不大可能的. 这次有很多细节败笔可以赖到毛笔不好用上.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果有投影仪的话, 估计会更容易一些吧.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;进宝和美慧一起给各位拜年了:&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_20171214_114308" src="https://i.loli.net/2018/02/11/5a8059bf0a82f.jpg"&gt;&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/bulabula/Write-Spring-Festival-couplets/</guid><pubDate>Sun, 11 Feb 2018 14:00:00 GMT</pubDate></item><item><title>山海经简单统计</title><link>https://goldengrape.github.io/posts/bulabula/Classic_of_Mountains_and_Seas/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;《山海经》全书十八卷, 其中“山经”五卷, “海经”八卷, “大荒经”四卷, “海内经”一卷, 共约31000字。记载了100多个邦国, 550山, 300水道以及邦国山水的地理、风土物产等信息。《山海经》中对于动物的记载, 据统计有277种之多&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;异兽&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;搜索"有* 兽焉"或者"又兽焉", 合计87种怪兽。例如:&lt;ul&gt;
&lt;li&gt;有兽焉, 其状如禺而白耳, 伏行人走, 其名曰狌狌.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;吃与被吃的关系&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;搜索"食之", 出现66次. "食之"都是说吃了以后会怎么样, 前面往往是一种动物或者植物的名字, 后面讲的是吃完以后的效果, 例如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;祝余, 食之不饥&lt;/li&gt;
&lt;li&gt;狌狌, 食之善走&lt;/li&gt;
&lt;li&gt;赤鱬, 其状如鱼而人面, 其音如鸯鸳, 食之不疥&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;搜索"食者", 出现10次. "食者"是说吃了这种东西的人会怎样怎样. 例如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;鱃鱼, 其状如鲤而大首, 食者不疣&lt;/li&gt;
&lt;li&gt;䲢鱼, 状如鳜, 居逵, 苍文赤尾, 食者不痈&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于可以吃的东西, 共出现76次. 考虑到一共只有87种异兽, (当然能吃的还有些是植物), 可以深深体会到先民们对吃的热爱.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;搜索"食人", 出现20次. 例如:&lt;ul&gt;
&lt;li&gt;水有兽焉, 名曰蛊雕, 其状如雕而有角, 其音如婴儿之音, 是食人&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可见当时的生活也还是很危险的, 23%的异兽是吃人的, 不过有一个很特殊, 九尾狐既会吃人, 又可能被人所吃:"有兽焉, 其状如狐而九尾, 其音如婴儿, 能食人, 食者不蛊"&lt;/p&gt;
&lt;h2&gt;环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;搜索"无草木", 出现秃山98座, 占550座山的17. 8%, 看起来当时的环境也不怎么样嘛.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;财富&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;搜索"金", 出现164次, 搜索"玉", 出现249次. 我本来以为金可能是金属的统称, 但单独搜索"铁"的话, 也有41处. 有可能金包含了Au和Cu还有一些其他的什么.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/bulabula/Classic_of_Mountains_and_Seas/</guid><pubDate>Sat, 10 Feb 2018 06:00:00 GMT</pubDate></item><item><title>用jupyter写程序时小心意外的全局变量</title><link>https://goldengrape.github.io/posts/python/beware-Free-variables-and-bound-variables/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;这周写作业, 用jupyter时遇坑一枚, 导致我改了作业10次以后才全对通过. 
&lt;img src="https://i.loli.net/2018/02/07/5a7abfe105014.png" alt="10次交作业"&gt;
而且这个坑与我当前的编程习惯有关. 有必要记录下来, 以免未来再犯. 
&lt;!-- TEASER_END --&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="过程重现"&gt;过程重现&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/beware-Free-variables-and-bound-variables/#%E8%BF%87%E7%A8%8B%E9%87%8D%E7%8E%B0"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [19]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;lstm_forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;caches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    
    &lt;span class="c1"&gt;### START CODE HERE ###&lt;/span&gt;
    &lt;span class="c1"&gt;# Retrieve dimensions from shapes of x and Wy (≈2 lines)&lt;/span&gt;
    &lt;span class="n"&gt;n_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T_x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
    &lt;span class="n"&gt;n_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Wy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
    
    &lt;span class="c1"&gt;# initialize "a", "c" and "y"&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T_x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T_x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T_x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    
    &lt;span class="c1"&gt;# other code&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;caches&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [18]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Wy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;parameters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"Wy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"by"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;caches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lstm_forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"a[4][3][6] = "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"a.shape = "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"y[1][4][3] ="&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"y.shape = "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;

&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;a[4][3][6] =  0.177161164438
a.shape =  (5, 10, 7)
y[1][4][3] = 0.15098073328
y.shape =  (2, 10, 7)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;coursera这门RNN的课程作业, 一般都会给出每一次测试的期望结果, 比如会写明, 输出结果应当是:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="mf"&gt;0.177161164438&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.15098073328&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然实际计算比这个复杂, 我不应该展示作业中的代码, 并不会完整展示整个函数内部.&lt;/p&gt;
&lt;p&gt;由于指定了随机数种子np.random.seed(1), 这个结果是可以重现的, 又因为输入是随机数, 如果计算过程错了, 几乎很难出现相同的结果.&lt;/p&gt;
&lt;p&gt;所以当我看到计算的结果和期望的输出结果一致, 就理所当然认为自己已经做对了, 于是安心提交, 于是每次都是这个函数无法通过. 但函数内部没有太复杂的计算过程, 怎么也找不到哪里错了, 差点就向coursera报bug了. 直到我搜讨论区里的帖子, 看到&lt;a href="https://www.coursera.org/learn/nlp-sequence-models/discussions/weeks/1/threads/dEtBDwcQEei__wr1QTcVxA/replies/jpn0MAcSEei-vwoKMc4stg/comments/nXGxtQcdEei9nwpnlVcPbA"&gt;这一条&lt;/a&gt;, 才搞清楚了问题在哪里.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="bug解释"&gt;bug解释&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/beware-Free-variables-and-bound-variables/#bug%E8%A7%A3%E9%87%8A"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;注意这里:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;lstm_forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Retrieve dimensions from shapes of x and Wy&lt;/span&gt;
    &lt;span class="n"&gt;n_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Wy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我只看到提示说要从Wy里提取出维度信息, 于是就直接取了Wy.shape, 但参数表&lt;code&gt;def lstm_forward(x, a0, parameters):&lt;/code&gt;之中并没有Wy!&lt;/p&gt;
&lt;p&gt;Wy因为没有出现在参数表里, 没有和参数表中的(x,a0,paramaters) bound在一起, 所以其实是一个&lt;a href="https://en.wikipedia.org/wiki/Free_variables_and_bound_variables"&gt;free variable&lt;/a&gt;, 一个free variable的取值要从函数外面找, 如果函数外面没有, 自然就会报错.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;倒霉的是自己在一个jupyter文件内运行, 和把作业提交给coursera进行检测是两种不同的情况.&lt;/p&gt;
&lt;p&gt;自己运行测试的时候是&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Wy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parameters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"Wy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"by"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;caches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lstm_forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里Wy被Wy = np.random.randn(2,5)定义了, 所以在lstm_forward函数内部, 用Wy.shape时会直接找到这里.&lt;/p&gt;
&lt;p&gt;而在作业检测时, 恐怕不是这样, 没有外部定义的Wy, 所有给lstm_forward的参数都是从(x, a0, parameters)传入的, 在parameters字典里, 有一个叫做Wy的参数.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="正确的写法"&gt;正确的写法&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/beware-Free-variables-and-bound-variables/#%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%86%99%E6%B3%95"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [22]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;lstm_forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Retrieve dimensions from shapes of x and Wy&lt;/span&gt;
    &lt;span class="n"&gt;n_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Wy"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt; &lt;span class="c1"&gt;# 而不是 Wy.shape&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;这样获得的Wy才是从参数表中传入的. 而不是在本地测试时自己去外面找来的.&lt;/p&gt;
&lt;p&gt;在&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Wy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parameters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"Wy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"by"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;caches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lstm_forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;里面,&lt;/p&gt;
&lt;p&gt;Wy = np.random.randn(2,5) 这句话实际上是隐式定义了一个叫Wy的全局变量, 在这个jupyter文件中各个函数都可以访问.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="为什么危险"&gt;为什么危险&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/beware-Free-variables-and-bound-variables/#%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8D%B1%E9%99%A9"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;因为这是和我当前使用jupyter写程序的习惯有关的.&lt;/p&gt;
&lt;p&gt;作为一名野生程序员, 我根本不可能记忆大量的python函数, 写上面演示时, 我甚至还要测试一下到底是&lt;code&gt;np.random.rand(n_a, m, T_x)&lt;/code&gt;还是写成&lt;code&gt;np.random.rand((n_a, m, T_x))&lt;/code&gt;, 谁能记得np.random.rand和np.random.zeros用的是不一样的括号个数!&lt;/p&gt;
&lt;p&gt;我想即使是专业程序员在写代码时也是需要摆上参考书或者参考网站的. 于是我的做法是一边查一边写, 一边写一边改, 直到改通了再写, 那么一边写一边改的时候, 比较方便的是在jupyter开一个cell, 写, 运行, 再写, 再运行, 这一段cell写好以后, 再把它装进一个def的函数里.&lt;/p&gt;
&lt;p&gt;那么在这个过程里, 就很容易出现上面的bug, 一个是写的时候不一定考虑好了封装和传入参数表的问题, 二是当前工作内存中是存有之前放入的测试数据的.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="应该怎么改"&gt;应该怎么改&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/beware-Free-variables-and-bound-variables/#%E5%BA%94%E8%AF%A5%E6%80%8E%E4%B9%88%E6%94%B9"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;我想:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先还是养成好习惯. 如果要用到全局变量, 就要显式声明出来, &lt;/li&gt;
&lt;li&gt;即时封装, 除非是需要在同一个jupyter里展示, 否则最好每个部分都用def给封装起来, 在程序最后用&lt;code&gt;if __name__=="__main__"&lt;/code&gt;来设定输出的部分. &lt;/li&gt;
&lt;li&gt;完整的测试还是要在另一个文件中调用才好, 如果记得的话, 最好还使用不同的变量名进行参数设定. &lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
</description><category>python</category><guid>https://goldengrape.github.io/posts/python/beware-Free-variables-and-bound-variables/</guid><pubDate>Wed, 07 Feb 2018 09:00:00 GMT</pubDate></item><item><title>NOAA天气数据格式转换</title><link>https://goldengrape.github.io/posts/python/NOAA-weather-data-from-dly-to-pandas-df/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Convert NOAA weahter data file ".dly" to Pandas DataFrame&lt;/p&gt;
&lt;p&gt;Follow this instruction &lt;a href="https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt"&gt;https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Get data from ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ftplib&lt;/span&gt;

&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;matplotlib&lt;/span&gt; notebook
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [2]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# download data from FTP&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;download_file_from_ftp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FTP_SERVER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;FTP_PATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;FILENAME&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;ftplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FTP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FTP_SERVER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FTP_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FILENAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;retrbinary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'RETR '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;FILENAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Query-station-ID"&gt;Query station ID&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/NOAA-weather-data-from-dly-to-pandas-df/#Query-station-ID"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_station_ID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;station_to_find&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;station_to_find&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;line_with_station&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;
            &lt;span class="n"&gt;station_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;line_with_station&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;station_ID&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;span class="c1"&gt;# warning, it is slow, download it only once&lt;/span&gt;
&lt;span class="n"&gt;download_file_from_ftp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"ftp.ncdc.noaa.gov"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"/pub/data/ghcn/daily"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"ghcnd-stations.txt"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;station_to_find&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"GUANGZHOU"&lt;/span&gt; &lt;span class="c1"&gt;# USE CAPS&lt;/span&gt;
&lt;span class="n"&gt;station_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;get_station_ID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;station_to_find&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"ghcnd-stations.txt"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Download-weather-data"&gt;Download weather data&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/NOAA-weather-data-from-dly-to-pandas-df/#Download-weather-data"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [4]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;weather_data_filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;station_ID&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;'.dly'&lt;/span&gt;

&lt;span class="c1"&gt;# warning, it is slow, download it only once&lt;/span&gt;
&lt;span class="n"&gt;download_file_from_ftp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"ftp.ncdc.noaa.gov"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"/pub/data/ghcn/daily/all"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;weather_data_filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Convert-.dly-to-pandas-Dataframe"&gt;Convert .dly to pandas Dataframe&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/NOAA-weather-data-from-dly-to-pandas-df/#Convert-.dly-to-pandas-Dataframe"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [7]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;convert_dly_to_dataframe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dly_filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;build_dly_value_dict&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;dly_value_dict_base&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"VALUE"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="s2"&gt;"MFLAG"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="s2"&gt;"QFLAG"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="s2"&gt;"SFLAG"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
        &lt;span class="n"&gt;dly_value_step&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;
        &lt;span class="n"&gt;dly_value_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dly_value_dict_base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="n"&gt;dly_value_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;dly_value_step&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;dly_value_step&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dly_value_dict&lt;/span&gt;
    
    &lt;span class="n"&gt;dly_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"ID"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="s2"&gt;"YEAR"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
        &lt;span class="s2"&gt;"MONTH"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
        &lt;span class="s2"&gt;"ELEMENT"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;],}&lt;/span&gt;
    &lt;span class="n"&gt;dly_dict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;build_dly_value_dict&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="n"&gt;columns_value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"VALUE"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"YEAR"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"MONTH"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"ELEMENT"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;columns_value&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;extract_data_from_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;

    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dly_filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;data_item&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;data_item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extract_data_from_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dly_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_numeric&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'ignore'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nan&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;convert_dly_to_dataframe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;weather_data_filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;
&lt;div class="prompt output_prompt"&gt;Out[7]:&lt;/div&gt;


&lt;div class="output_html rendered_html output_subarea output_execute_result"&gt;
&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: right;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;YEAR&lt;/th&gt;
      &lt;th&gt;MONTH&lt;/th&gt;
      &lt;th&gt;ELEMENT&lt;/th&gt;
      &lt;th&gt;VALUE1&lt;/th&gt;
      &lt;th&gt;VALUE2&lt;/th&gt;
      &lt;th&gt;VALUE3&lt;/th&gt;
      &lt;th&gt;VALUE4&lt;/th&gt;
      &lt;th&gt;VALUE5&lt;/th&gt;
      &lt;th&gt;VALUE6&lt;/th&gt;
      &lt;th&gt;VALUE7&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;VALUE22&lt;/th&gt;
      &lt;th&gt;VALUE23&lt;/th&gt;
      &lt;th&gt;VALUE24&lt;/th&gt;
      &lt;th&gt;VALUE25&lt;/th&gt;
      &lt;th&gt;VALUE26&lt;/th&gt;
      &lt;th&gt;VALUE27&lt;/th&gt;
      &lt;th&gt;VALUE28&lt;/th&gt;
      &lt;th&gt;VALUE29&lt;/th&gt;
      &lt;th&gt;VALUE30&lt;/th&gt;
      &lt;th&gt;VALUE31&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1945&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;TAVG&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;107.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1945&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;TAVG&lt;/td&gt;
      &lt;td&gt;123.0&lt;/td&gt;
      &lt;td&gt;136.0&lt;/td&gt;
      &lt;td&gt;152.0&lt;/td&gt;
      &lt;td&gt;144.0&lt;/td&gt;
      &lt;td&gt;146.0&lt;/td&gt;
      &lt;td&gt;189.0&lt;/td&gt;
      &lt;td&gt;219.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;179.0&lt;/td&gt;
      &lt;td&gt;146.0&lt;/td&gt;
      &lt;td&gt;128.0&lt;/td&gt;
      &lt;td&gt;107.0&lt;/td&gt;
      &lt;td&gt;104.0&lt;/td&gt;
      &lt;td&gt;112.0&lt;/td&gt;
      &lt;td&gt;122.0&lt;/td&gt;
      &lt;td&gt;127.0&lt;/td&gt;
      &lt;td&gt;129.0&lt;/td&gt;
      &lt;td&gt;156.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1946&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;TAVG&lt;/td&gt;
      &lt;td&gt;150.0&lt;/td&gt;
      &lt;td&gt;150.0&lt;/td&gt;
      &lt;td&gt;123.0&lt;/td&gt;
      &lt;td&gt;117.0&lt;/td&gt;
      &lt;td&gt;112.0&lt;/td&gt;
      &lt;td&gt;121.0&lt;/td&gt;
      &lt;td&gt;125.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;146.0&lt;/td&gt;
      &lt;td&gt;153.0&lt;/td&gt;
      &lt;td&gt;173.0&lt;/td&gt;
      &lt;td&gt;196.0&lt;/td&gt;
      &lt;td&gt;211.0&lt;/td&gt;
      &lt;td&gt;212.0&lt;/td&gt;
      &lt;td&gt;218.0&lt;/td&gt;
      &lt;td&gt;201.0&lt;/td&gt;
      &lt;td&gt;156.0&lt;/td&gt;
      &lt;td&gt;131.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1946&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;TAVG&lt;/td&gt;
      &lt;td&gt;114.0&lt;/td&gt;
      &lt;td&gt;112.0&lt;/td&gt;
      &lt;td&gt;147.0&lt;/td&gt;
      &lt;td&gt;181.0&lt;/td&gt;
      &lt;td&gt;195.0&lt;/td&gt;
      &lt;td&gt;192.0&lt;/td&gt;
      &lt;td&gt;149.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;201.0&lt;/td&gt;
      &lt;td&gt;196.0&lt;/td&gt;
      &lt;td&gt;231.0&lt;/td&gt;
      &lt;td&gt;226.0&lt;/td&gt;
      &lt;td&gt;221.0&lt;/td&gt;
      &lt;td&gt;229.0&lt;/td&gt;
      &lt;td&gt;240.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1946&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;TAVG&lt;/td&gt;
      &lt;td&gt;237.0&lt;/td&gt;
      &lt;td&gt;162.0&lt;/td&gt;
      &lt;td&gt;142.0&lt;/td&gt;
      &lt;td&gt;133.0&lt;/td&gt;
      &lt;td&gt;183.0&lt;/td&gt;
      &lt;td&gt;187.0&lt;/td&gt;
      &lt;td&gt;160.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;183.0&lt;/td&gt;
      &lt;td&gt;192.0&lt;/td&gt;
      &lt;td&gt;205.0&lt;/td&gt;
      &lt;td&gt;216.0&lt;/td&gt;
      &lt;td&gt;223.0&lt;/td&gt;
      &lt;td&gt;238.0&lt;/td&gt;
      &lt;td&gt;207.0&lt;/td&gt;
      &lt;td&gt;195.0&lt;/td&gt;
      &lt;td&gt;233.0&lt;/td&gt;
      &lt;td&gt;228.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 rows × 34 columns&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [ ]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
</description><category>python</category><guid>https://goldengrape.github.io/posts/python/NOAA-weather-data-from-dly-to-pandas-df/</guid><pubDate>Sat, 03 Feb 2018 06:00:00 GMT</pubDate></item><item><title>脑洞一打开, 功德自然来</title><link>https://goldengrape.github.io/posts/bulabula/open-mind-for-merit/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;本文使用&lt;a href="https://creativecommons.org/licenses/by/4.0/deed.zh"&gt;cc-by 4.0 协议&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;您可以自由地：共享, 演绎&lt;/li&gt;
&lt;li&gt;惟须遵守下列条件：署名&lt;/li&gt;
&lt;li&gt;非常欢迎商业使用&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;六字真言安全带护套:&lt;/h2&gt;
&lt;p&gt;安全带上做一护套, 用反光布绣上
”唵嘛呢叭咪吽”&lt;/p&gt;
&lt;p&gt;&lt;img alt="六字真言" src="https://i.loli.net/2018/02/02/5a73f2af29771.png"&gt;&lt;/p&gt;
&lt;p&gt;系好安全带时有六字真言胸前护体, 注意&lt;strong&gt;切不可置于背后&lt;/strong&gt;或者放在一边.&lt;/p&gt;
&lt;p&gt;发明是要提供社会有益效果的.&lt;/p&gt;
&lt;p&gt;但是世上居然有类似&lt;a href="https://search.jd.com/Search?keyword=%E5%AE%89%E5%85%A8%E5%B8%A6%E6%8F%92%E5%A4%B4"&gt;安全带插头&lt;/a&gt;这种邪恶的发明, 用来欺骗汽车的安检系统, 在不系安全带时避免警报器响. 这是在谋财+害命.&lt;/p&gt;
&lt;p&gt;很遗憾, 据我观察如果一辆车上摆着佛像, 后视镜上挂着佛像/十字架/毛主席像, 那么安全带扣位置上高概率出现这种安全带插头. 喂! 你们的神已经派遣&lt;a href="https://en.wikipedia.org/wiki/Nils_Bohlin"&gt;Nils Bohlin&lt;/a&gt;在1958年发明&lt;a href="https://zh.wikipedia.org/wiki/%E5%BA%A7%E4%BD%8D%E5%AE%89%E5%85%A8%E5%B8%B6"&gt;三点式安全带&lt;/a&gt;来保护大家了, 为什么要欺骗他.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;h2&gt;南无阿弥陀佛计步app:&lt;/h2&gt;
&lt;p&gt;每走一步, app念颂南无阿弥陀佛圣号一次, 每日念108x72次, 可现琉璃光如来圣像一次.&lt;/p&gt;
&lt;p&gt;看起来不难写啊, 哪天当作python kivy练习给写了.&lt;/p&gt;
&lt;h2&gt;金刚经有氧心率监测:&lt;/h2&gt;
&lt;p&gt;善男子善女人输入生辰八字, 算出有氧运动最适心率, 开始有氧运动后播放金刚经(&lt;a href="https://music.163.com/#/song?id=298867"&gt;王菲念诵版39分21秒&lt;/a&gt;), 当心率在有氧运动区间时声音最响亮, 过低或过高念诵声音降低.&lt;/p&gt;
&lt;p&gt;ardunio配蓝牙模块就能搞定吧. 如果是给老年人用的, 其实搞到智能手机上并不好.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配耳机, 不要外放, 拜托了.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;车载手机转经轮锁&lt;/h2&gt;
&lt;p&gt;可以通过支架固定在空调出风口上的手机架.&lt;/p&gt;
&lt;p&gt;但与常规不同的是, 插入手机后前表面有一个有机玻璃板, 挡住手机屏幕, 使触摸屏幕不可操作. 当插入手机后自动锁住, 要将手机取出需转动有机玻璃板旁边的转经轮36圈后才可取出.&lt;/p&gt;
&lt;p&gt;达成这个目的的机械结构应该很多吧. 反正就是不能让人方便地在开车时用手机就对了. 就算是要用导航, 也是设定好了放进去锁好. 不要拿出来.&lt;/p&gt;
&lt;h2&gt;药师佛真言刷牙法:&lt;/h2&gt;
&lt;p&gt;刷牙时, 每颗牙有三面, 每刷一面默诵一遍药师真言:
“唵。鞞杀逝。鞞杀逝。鞞杀社。三没揭帝莎诃。”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每日早晚三餐后!&lt;/li&gt;
&lt;li&gt;每牙每面不可漏!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个不是一个产品, 现在就可以践行.&lt;/p&gt;
&lt;p&gt;默诵药师真言一遍大约3-4秒, 这样&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保证了早晚刷牙的次数不会少&lt;/li&gt;
&lt;li&gt;保证了每个面至少有3-4秒的刷牙时间, 每颗牙有10秒左右.&lt;/li&gt;
&lt;li&gt;将刷牙的动作从刷牙这个整体事件分解到了刷每个面.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然, 这个刷牙法如果能够做到电动牙刷上就更好了.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;以上以佛教为例, 将修行与日常生活中的安全/健康行为结合在一起. 按此思路, 也可以使用其他各种宗教经典. 宗教本来就有规范行为的作用.宗教类的产品也有很多, 与其做些土偶木梗, 不如做点能够改善信众生活质量的产品.&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/bulabula/open-mind-for-merit/</guid><pubDate>Fri, 02 Feb 2018 04:20:00 GMT</pubDate></item></channel></rss>