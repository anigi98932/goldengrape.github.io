<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GoldenGrape's Blog (关于文章 python)</title><link>https://goldengrape.github.io/</link><description></description><atom:link href="https://goldengrape.github.io/categories/python.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_cn</language><copyright>Contents © 2020 &lt;a href="mailto:https://twitter.com/goldengrape"&gt;Golden Grape&lt;/a&gt; </copyright><lastBuildDate>Thu, 23 Jan 2020 14:16:31 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>SARI数据分析(2): 使传染病疫情可以控制的因素</title><link>https://goldengrape.github.io/posts/python/SARI/SARI_data_analysis_2/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;使传染病疫情可以控制的因素&lt;/p&gt;
&lt;p&gt;Factors that make an infectious disease outbreak controllable&lt;/p&gt;
&lt;p&gt;上一篇看得头疼先扔到一边. 快速浏览了一下这篇, 似乎模型相对简单一些, 可能读完了对理解上一篇的复杂模型也有帮助. 这一篇发表于2004年的PNAS, 有600次的引用量.&lt;/p&gt;
&lt;p&gt;全文: &lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC395937/"&gt;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC395937/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/SARI/SARI_data_analysis_2/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://goldengrape.github.io/posts/python/SARI/SARI_data_analysis_2/</guid><pubDate>Thu, 23 Jan 2020 08:00:00 GMT</pubDate></item><item><title>SARI数据分析(1): 控制新出现流行病的非药物干预措施比较</title><link>https://goldengrape.github.io/posts/python/SARI/SARI_data_analysis_1/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;控制新出现流行病的非药物干预措施比较&lt;/p&gt;
&lt;p&gt;Comparing nonpharmaceutical interventions for containing emerging epidemics&lt;/p&gt;
&lt;p&gt;2017年, 发在PNAS, 作者是哈佛大学公共卫生学院和哈佛医学院, 目前被引用13次,
全文: &lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5393248/"&gt;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5393248/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下先读懂原文, 然后再看看能否根据原文的模型, 拟合一个SARI的模型出来.
(点击右上的“源文件”, 可以下载本文自行运行其中代码)
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/SARI/SARI_data_analysis_1/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 2 分钟)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://goldengrape.github.io/posts/python/SARI/SARI_data_analysis_1/</guid><pubDate>Wed, 22 Jan 2020 13:00:00 GMT</pubDate></item><item><title>抗偏位非球面人工晶体设计</title><link>https://goldengrape.github.io/posts/python/asphereicle_anti_decenter/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;先给非眼科学的读者介绍一下知识背景。1949年，Ridly爵士发明了人工晶状体（Intraocluar lens，IOL，人工晶体），是一枚有机玻璃镜片，可以植入到眼内，替代人眼的天然晶状体。这是唯一，也是非常有效的治疗白内障的方法，将因为白内障浑浊的天然晶状体，更换成人工晶体。&lt;/p&gt;
&lt;p&gt;早期人工晶体的加工和光学设计显然是和光学镜头一致的，是球面镜。人工晶体的材料逐渐从硬质的PMMA，进化到了有弹性可折叠的硅胶、亲水/疏水丙烯酸酯、胶原等材料，切口也越来越小。但人工晶体的光学设计一直到1990s末才发生改变。&lt;/p&gt;
&lt;p&gt;人眼的角膜，是具有球差的，是一个“正球差”的凸透镜，也就是说，周边的屈光力更强，中央的弱一些，周边的光线会被聚焦得更&lt;strong&gt;近&lt;/strong&gt; ，人眼的晶状体，这东西不但形状不是标准球面镜，内部的折射率还是渐变的，最终的结果是人眼的晶状体是一个“负球差”的透镜。一定程度上，两个透镜的结合导致球差能够互相抵消一部分。&lt;/p&gt;
&lt;p&gt;对于球面镜的人工晶体，一定是一枚“正球差”的凸透镜，所以，即使屈光度计算正确，仍然会与角膜搭配增加球差。于是眼科医生们希望能够设计出非球面的人工晶体。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参考文献1:姚克, 陆道炎, 王丽天, 等. 非球面等视像后房型人工晶状体的临床应用. 中华眼科杂志, 1989, 25:262-264.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ncbi.nlm.nih.gov/pubmed/12458861"&gt;参考文献2: A new intraocular lens design to reduce spherical aberration of pseudophakic eyes.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一枚上市的非球面人工晶体是AMO公司(现在属于强生)的Tecnis Z9000, &lt;a href="https://www.accessdata.fda.gov/scripts/cdrh/cfdocs/cfpma/pma.cfm?id=P990080S001"&gt;FDA: 09/05/2001 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;非球面IOL上市以后，人们发现，由于IOL是通过手术植入的，多多少少可能有些偏位，也就是人工晶体的光学中心与角膜的光轴可能有差距。这个量很小，只有0.x mm。当消球差的两个非球面镜之间发生偏位的时候，平行光入射，会发生偏移，会形成新的像差，叫做慧差，于是一部分厂商认为慧差也是需要纠正的。&lt;/p&gt;
&lt;p&gt;但在术前并无法知道术后IOL的偏位量，所以博士伦公司推出了“零球差”的IOL，也就是较少矫正角膜球差，虽然可能有偏位，但并不因为偏位而产生慧差。&lt;/p&gt;
&lt;p&gt;在此之后，更多的厂商利用光学设计推出了“抗偏位”的非球面人工晶体，也就是说，在矫正角膜球差的基础上，即使发生了偏位，也不会引起比较大的慧差。&lt;/p&gt;
&lt;p&gt;相应的，各个厂商也给自己的非球面人工晶体起了各种名字，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HOYA： 非球面平衡曲线（ABC曲线）&lt;/li&gt;
&lt;li&gt;爱博诺德：高次非球面&lt;/li&gt;
&lt;li&gt;蕾明视康：轴向渐进非球面&lt;/li&gt;
&lt;li&gt;蔡司：非恒定像差&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么接下来就讲解抗偏位非球面人工晶体设计的基本原理。
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/asphereicle_anti_decenter/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 7 分钟)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://goldengrape.github.io/posts/python/asphereicle_anti_decenter/</guid><pubDate>Fri, 31 May 2019 04:00:00 GMT</pubDate></item><item><title>那些在线的jupyter</title><link>https://goldengrape.github.io/posts/python/na-xie-zai-xian-de-jupyter/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;h4&gt;update:&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Data School有一篇非常好的评测，写了6个在线的Jupyter服务，建议去看看。
&lt;a href="https://www.dataschool.io/cloud-services-for-jupyter-notebook/"&gt;Six easy ways to run your Jupyter Notebook in the cloud&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里还有一个太长不看的&lt;a href="https://docs.google.com/spreadsheets/d/12thaaXg1Idr3iWST8QyASNDs08sjdPd6m9mbCGtHFn0"&gt;总结表格&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;以下部分写于2年前，部分内容与现实略有差异&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Jupyter&lt;/h2&gt;
&lt;p&gt;如果你是python的初学者, 非常推荐Jupyter.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/na-xie-zai-xian-de-jupyter/Jupyter.org"&gt;Juypter&lt;/a&gt;是一个交互式的编程环境,  号称&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;The Notebook has support for over 40 programming languages,
including Python, R, Julia, and Scala.
&lt;/pre&gt;


&lt;p&gt;支持超过40种语言, 其中包括Python,  R,  Julia和Scala. 虽然除了Python, 目前提到的其他语言我还都不会, 但是看起来是很强大很有前途的样子.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/na-xie-zai-xian-de-jupyter/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><category>现代眼科医生知识扩展包</category><guid>https://goldengrape.github.io/posts/python/na-xie-zai-xian-de-jupyter/</guid><pubDate>Sat, 18 May 2019 04:00:00 GMT</pubDate></item><item><title>根据字幕做视频摘要</title><link>https://goldengrape.github.io/posts/python/video_keynote/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;周末做了一个奇怪的小东西.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I made a strange gadget on the weekend.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个根据字幕来做出视频缩略版的工具, 效果参见&lt;a href="https://www.youtube.com/watch?v=wxlySg9TBBI"&gt;李永乐老师讲柏拉图立体的复习缩略版&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;It is a tool to make a abbreviated video based on subtitles. See &lt;a href="https://www.youtube.com/watch?v=wxlySg9TBBI"&gt;Teacher Li Yongle explained the Platonic solid（review version)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/wxlySg9TBBI" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;这是一段remix的视频, 是从&lt;a href="https://www.youtube.com/watch?v=m9AE_G_9c7Y"&gt;李永乐老师讲柏拉图立体&lt;/a&gt; 的课程中节选了数学概念的部分, 去掉了推导与展开的部分. 原视频大约12分钟, 剪辑后的视频只有4分钟. 可以方便用来快速复习概念.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This is a remix video, which is selected from the course of &lt;a href="https://www.youtube.com/watch?v=m9AE_G_9c7Y"&gt;Platonic solid&lt;/a&gt;, and the deduction and expansion part were removed. The original video is about 12 minutes, and the remix video is only 4 minutes. It is convenient for quick review of concepts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/video_keynote/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 8 分钟)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://goldengrape.github.io/posts/python/video_keynote/</guid><pubDate>Mon, 25 Mar 2019 04:00:00 GMT</pubDate></item><item><title>通项公式快速求解</title><link>https://goldengrape.github.io/posts/python/carefree-princess-1018/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;现在每天早上早起, 先做一道&lt;a href="https://mp.weixin.qq.com/s/kyWUQoWPPokr4ITg4G3fwA"&gt;无忧公主的数学时间&lt;/a&gt;里面的数学题, 提神醒脑.&lt;/p&gt;
&lt;p&gt;今天的题目是这样的:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;f(1)=f(2)=1&lt;/p&gt;
&lt;p&gt;f(n)=f(n-1)-f(n-2)+n&lt;/p&gt;
&lt;p&gt;求f(2018)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解法大概是找规律什么的吧, 中间会出现f(n-1)=f(n-2)的情况, 然后有一定的循环.&lt;/p&gt;
&lt;p&gt;但是, 怎么能这么轻易使用自己手算呢? 一定要暴力编程解决才好.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;随手写个递归:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;

&lt;div class="prompt"&gt;&lt;/div&gt;


&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;1 1
2 1
3 3
4 6
5 8
6 8
7 7
8 7
9 9
10 12
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;但没有使用尾递归的话, 计算f(2018)肯定是要死机的. 然后, 我&lt;strong&gt;忘记怎么写尾递归了&lt;/strong&gt;
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/carefree-princess-1018/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://goldengrape.github.io/posts/python/carefree-princess-1018/</guid><pubDate>Tue, 08 Jan 2019 08:00:00 GMT</pubDate></item><item><title>Alpha的后验分解</title><link>https://goldengrape.github.io/posts/python/Alpha_tear/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Alpha的后验分解"&gt;Alpha的后验分解&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/Alpha_tear/#Alpha%E7%9A%84%E5%90%8E%E9%AA%8C%E5%88%86%E8%A7%A3"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;最近在学习量化分析, 其中有一个作业是这样:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Alpha的后验分解：给定一个组合P，估算该组合相对于业绩基准组合B的各参数：$β_p$ 、$α_p$、 以及组合风险 $σ_p$ 和残差风险 $ω_p$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;总觉得自己哪里算错了, 比如&lt;a href="http://cn.morningstar.com/quicktake/F0000003X3"&gt;华夏上证50ETF(代码: 510050)&lt;/a&gt;的alpha算出来总是-0.00091,&lt;/p&gt;
&lt;p&gt;一时检查不出来, 暂时先摆出来供讨论
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/Alpha_tear/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 2 分钟)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://goldengrape.github.io/posts/python/Alpha_tear/</guid><pubDate>Sat, 22 Sep 2018 17:00:00 GMT</pubDate></item><item><title>octopus视野报告数据提取</title><link>https://goldengrape.github.io/posts/python/octopus-data/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;又写好了一段PDF报告数据提取的小程序, 这次是针对Octopus 900动态视野计的. 可以提取PDF的视野检查结果报告中的数据, 能够提取的数据包括: 姓名, 生日, 检查日期, 眼别, 检查程序名称, RF, MS, MD, sLV, 还有视野测量的原始数据. &lt;/p&gt;
&lt;p&gt;提取出来的数据保存在csv文件里, 可以使用excel打开和处理.
&lt;img alt="示例" src="https://i.loli.net/2018/07/09/5b43624ad0d9f.png"&gt;
其中以G standard程序测量的原始数据是按照从中心开始顺时针螺线的方式排列成一行的.
&lt;img alt="屏幕快照 2018-07-08 20.11.26" src="https://i.loli.net/2018/07/09/5b437a3ac6eed.png"&gt;&lt;/p&gt;
&lt;p&gt;也可以处理一个一个文件夹下所有的PDF报告, 把提取的数据汇总到一个csv里面.&lt;/p&gt;
&lt;p&gt;项目文件开源, 放在在&lt;a href="https://github.com/goldengrape/read_medical_device_data/blob/master/python/pdf_parser/Octopus_VF.ipynb"&gt;github&lt;/a&gt;上, 如果已经比较熟悉github, python和jupyter, 打开看看就很容易理解.  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;注意: 目前我还只能处理未加密的PDF, 并且PDF的页面大小必须严格是A4, 否则无法取得数据. 切记切记.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;但如果以前没怎么接触过python, 又临时需要处理些数据, 那么以下是使用教程:
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/octopus-data/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 12 分钟)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>https://goldengrape.github.io/posts/python/octopus-data/</guid><pubDate>Mon, 09 Jul 2018 13:00:00 GMT</pubDate></item><item><title>眼科数据随机森林</title><link>https://goldengrape.github.io/posts/python/random-forest-for-ophthalmology-data/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;要讲解"随机森林", 先要简介一下"决策树". 各位眼科大夫在眼科门诊每天都在用"决策树", 比如一位单侧眼痛伴同侧头痛的病人进入门诊:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;眼压&amp;gt;21mmHg吗?&lt;ul&gt;
&lt;li&gt;不是, 考虑其他可能&lt;/li&gt;
&lt;li&gt;是的, 考虑青光眼可能, 还有鉴别诊断1, 2, 3..., 进入下一题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;前房浅吗?&lt;ul&gt;
&lt;li&gt;不是, 考虑其他可能&lt;/li&gt;
&lt;li&gt;是的, 考虑急性闭角型青光眼发作, 还有鉴别诊断x,y,z...,, 进入下一题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;瞳孔光反射存在吗?&lt;ul&gt;
&lt;li&gt;存在, 考虑其他可能&lt;/li&gt;
&lt;li&gt;瞳孔固定, 考虑急性闭角型青光眼发作, 进入下一题
. . . .&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这就是一颗"决策树", 就是一堆判断题, 一层一层筛选, 最终将数据(病人)分成几类(急闭, 其他)&lt;/p&gt;
&lt;p&gt;"随机森林"就是由一组这样的"决策树"组成的分类器.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/random-forest-for-ophthalmology-data/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><category>ophthalmology</category><category>python</category><category>现代眼科医生知识扩展包</category><guid>https://goldengrape.github.io/posts/python/random-forest-for-ophthalmology-data/</guid><pubDate>Mon, 14 May 2018 14:00:00 GMT</pubDate></item><item><title>Applied Data Science with Python Specialization小结</title><link>https://goldengrape.github.io/posts/bulabula/Applied-Data-Science-with-Python-Specialization-summary/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a href="https://www.coursera.org/specializations/data-science-python"&gt;Applied Data Science with Python Specialization&lt;/a&gt;
五张证书拿到.&lt;/p&gt;
&lt;p&gt;小结一下这几门课
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/bulabula/Applied-Data-Science-with-Python-Specialization-summary/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>https://goldengrape.github.io/posts/bulabula/Applied-Data-Science-with-Python-Specialization-summary/</guid><pubDate>Mon, 16 Apr 2018 17:00:00 GMT</pubDate></item></channel></rss>