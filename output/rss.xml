<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GoldenGrape's Blog</title><link>https://goldengrape.github.io/</link><description>This is a blog site for GoldenGrape.</description><atom:link href="https://goldengrape.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_cn</language><copyright>Contents © 2019 &lt;a href="mailto:https://twitter.com/goldengrape"&gt;Golden Grape&lt;/a&gt; </copyright><lastBuildDate>Sun, 21 Jul 2019 14:43:20 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>大神面镜维修</title><link>https://goldengrape.github.io/posts/bulabula/how_to_fix_aqua_lung_sphera_mask/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;今天潜水的时候，发现面镜漏水。仔细观察，发现是胶垫没有很好包裹面镜镜片的边缘。可能是挤压造成了镜片和胶套的变形，导致有一点点松脱。&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_20190721_214540" src="https://i.loli.net/2019/07/21/5d347437d6c0c44307.jpg"&gt;
（事后复原出问题的部分）&lt;/p&gt;
&lt;p&gt;在水边弄了一会儿没有搞定，反而把镜片整个给拆下来了。这面镜可是我自由潜水老师赠我的宝物，回来后经过一番努力终于修好，&lt;/p&gt;
&lt;p&gt;大神面镜，准确的说应该是Aqua Lung Sphera Mask，&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_20190721_214303" src="https://i.loli.net/2019/07/21/5d34756a82b2d47149.jpg"&gt;
拆解过程详解如下，不失一般性以右眼为例：&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;将面镜翻90度，底面(鼻孔区域)向上。
&lt;img alt="MVIMG_20190721_212535" src="https://i.loli.net/2019/07/21/5d3476de4dc2618712.jpg"&gt;
&lt;img alt="IMG_20190721_214343" src="https://i.loli.net/2019/07/21/5d3475f43d64398116.jpg"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在灰黑交接处，使用一个小号的一字改锥，从此处插入。插入位置尽量靠近内侧边缘
&lt;img alt="IMG_20190721_214359" src="https://i.loli.net/2019/07/21/5d3476548b38753663.jpg"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;改锥下压并且手轻轻向鼻侧移动，撬动灰色塑料套，面镜的下缘会松脱。
&lt;img alt="IMG_20190721_214450" src="https://i.loli.net/2019/07/21/5d3476a1ee4aa44054.jpg"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这张图片可以看出面镜的黑色下缘通过一个卡扣固定在灰色的塑料套内。图中绿色圆圈标出。一字改锥就是把这个卡扣给松脱了，就可以取出面镜下缘。
&lt;img alt="MVIMG_20190721_212627" src="https://i.loli.net/2019/07/21/5d34778b13eee39262.jpg"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;面镜下缘取出后，小心把镜片装入到胶套中，确保胶套包裹住镜片边缘的内外表面。然后再将面镜下缘重新插入回去即可。注意插入的时候，那个三角形结构的底边要紧贴面镜的上缘部分。在将面镜下缘插入时，要小心不要让胶套变形太厉害，免得好不容易插回去时镜片没有放对位置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;学会这一招以后，似乎可以用来更换面镜的镜片了。&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/bulabula/how_to_fix_aqua_lung_sphera_mask/</guid><pubDate>Sun, 21 Jul 2019 13:00:00 GMT</pubDate></item><item><title>公理设计笔记（4）</title><link>https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_4/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;所以“公理设计”，就是基于两个公理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最大化功能模块的独立性&lt;/li&gt;
&lt;li&gt;最小化信息量（～=最大化成功实施的可能性）&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;这样做的好处：&lt;/p&gt;
&lt;h2 id="甲方总是善变的"&gt;甲方总是善变的&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_4/#%E7%94%B2%E6%96%B9%E6%80%BB%E6%98%AF%E5%96%84%E5%8F%98%E7%9A%84"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;客户需求就是用来不断改变的，就是用来不断折腾乙方的，因为甲方通常也不知道到底要什么，得折腾几次试试看，才能明确目标。如果把搜索引擎看作是乙方，这跟搜索个信息是一样的，搜索就是个学习的过程，一开始的时候往往我也不知道搜索什么，搜几个词试过以后才能明确到底要找什么。我当过甲方也当过乙方，我知道大家都是地球人，客户需求就是个不断变化的过程。&lt;/p&gt;
&lt;p&gt;但deadline是不变的。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;如果能够一开始把FRs(功能需求)和DPs(设计参数)独立得很好，那么已经做过的事情就不算完全浪费，还有可重用的可能性。独立性越高，浪费的工作就越少。&lt;/p&gt;
&lt;p&gt;而如果各个功能模块一开始就搅合在一起，那需求改了，就只好从头开始了。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://i.loli.net/2019/07/18/5d3071310697641566.png" alt="MFE 594 An Introduction to Axiomatic Design Part 4-qURM1A1BZJw-0001.png"&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="面向对象与结构化"&gt;面向对象与结构化&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_4/#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%8E%E7%BB%93%E6%9E%84%E5%8C%96"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;我最早学计算机语言的时候，还是结构化编程的时代，后来才开始面向对象编程。我其实一直尽量躲避面向对象编程。一部分是因为我只是做些科学计算，多数情况下一个东西算一遍就完了，不需要建立同一个类的多个实体；另一部分原因是因为设定类这事太“艺术”了，我不知道应该怎么设定，比如一个光路追踪的程序，是把光线设一个类，还是把界面设一个类，还是光线和界面都设定成类。&lt;/p&gt;
&lt;p&gt;《公理设计》这本书中专门有一章讲面向对象的软件设计，我还要再仔细看看这部分。争取能再深入理解一些。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="创新发明的套路"&gt;创新发明的套路&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_4/#%E5%88%9B%E6%96%B0%E5%8F%91%E6%98%8E%E7%9A%84%E5%A5%97%E8%B7%AF"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;发明是有套路的，作为发明家我知道一些。这里又提供了一组思路。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果现有技术中有耦合的部分，看看能否解耦合？&lt;/li&gt;
&lt;li&gt;现有技术中的FRs(功能需求)是否满足“不重复不漏项”的原则？&lt;/li&gt;
&lt;li&gt;重新在不同的域上划分不同层级的FRs(功能需求)&lt;/li&gt;
&lt;li&gt;新的技术/其他领域的技术是否可以突破现有的约束条件？&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>公理设计</category><guid>https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_4/</guid><pubDate>Thu, 18 Jul 2019 12:00:00 GMT</pubDate></item><item><title>公理设计笔记（3）</title><link>https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_3/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;前面讲解了目的，要尽量形成FRs（功能需求）与DPs(设计参数）的解耦合对应关系&lt;/p&gt;
&lt;p&gt;尽量对角矩阵形成：
$$
FRs=\begin{bmatrix}
X &amp;amp; 0 &amp;amp; ... &amp;amp; 0
\\ 0 &amp;amp;  X &amp;amp; ... &amp;amp; 0
\\ ...
\\ 0 &amp;amp;  0 &amp;amp; ... &amp;amp; X
\end{bmatrix} DPs
$$&lt;/p&gt;
&lt;p&gt;或者至少形成三角形矩阵：
$$
FRs=\begin{bmatrix}
X &amp;amp; 0 &amp;amp; ... &amp;amp; 0
\\ X &amp;amp;  X &amp;amp; ... &amp;amp; 0
\\ ...
\\ 0 &amp;amp;  X &amp;amp; ... &amp;amp; X
\end{bmatrix} DPs
$$&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;实际过程中是分层级对FRs（功能需求）与DPs(设计参数）进行分解的。先从&lt;/p&gt;
$$
\begin{bmatrix}
FR_1
\\ FR_2
\end{bmatrix}
=
\begin{bmatrix}
X &amp;amp; 0 
\\ X &amp;amp;  X 
\end{bmatrix} 
\begin{bmatrix}
DP_1
\\ DP_2
\end{bmatrix}
$$&lt;p&gt;开始，&lt;/p&gt;
&lt;p&gt;然后再把$FR_1$（功能需求）拆解成$FR_{1.1}, FR_{1.2}$，变成类似这个意思：&lt;/p&gt;
$$
\begin{bmatrix}
\begin{bmatrix}
FR_{1.1}
\\ FR_{1.2}
\end{bmatrix}
\\ FR_2
\end{bmatrix}
=
\begin{bmatrix}
\begin{bmatrix}
X &amp;amp; 0
\\ X &amp;amp; X
\end{bmatrix}&amp;amp; 0 
\\ X &amp;amp;  X 
\end{bmatrix} 
\begin{bmatrix}
\begin{bmatrix}
DP_{1.1}
\\ DP_{1.2}
\end{bmatrix}
\\ DP_2
\end{bmatrix}
$$
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;在拆分FRs（功能需求）的时候，要求是&lt;a href="https://zh.wikipedia.org/zh-hans/MECE%E5%8E%9F%E5%88%99"&gt;MECE&lt;/a&gt; min原则，也就是"不重复不漏项"并且总数尽量少。MECE := Mutually Exclusive Collectively Exhaustive，课程中使用的是CEME，可能商科里用MECE更多，反正一个意思。&lt;/p&gt;
&lt;p&gt;比如3D打印机的FR(功能需求)之一是要求在$FR_1$打印头空间内移动，那么就可以拆分成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$FR_{1.1}$ 在X轴方向移动&lt;/li&gt;
&lt;li&gt;$FR_{1.2}$ 在Y轴方向移动&lt;/li&gt;
&lt;li&gt;$FR_{1.3}$ 在Z轴方向移动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样的拆分方式显然是MECE的，当然也可以拆分成圆柱坐标系、球坐标系等等。不同的分解方式对应着不同的解决方案。&lt;/p&gt;
&lt;p&gt;对于DPs(设计参数)的拆分，目的是尽量形成对角矩阵，或者至少是三角形矩阵，那么就应当尽量让右上角的区域保持为0。而且在拆分DPs(设计参数)的时候，约束条件是继承的，比如$DP_1$是在中国建厂，那么$DP_{1.1},DP_{1.2}$就不能把工厂建立到越南去。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;在实际操作中，拆分是一点一点来进行的。说叫ZigZag。&lt;/p&gt;
&lt;p&gt;先把$FR_1$（功能需求）拆解成$FR_{1.1}, FR_{1.2}$，拆分好$FR_1$（功能需求）以后，再去拆分$DP_1$(设计参数)，拆好了DPs(设计参数)以后，再返回来拆下一个$FR$（功能需求）&lt;/p&gt;
&lt;p&gt;&lt;img src="https://i.loli.net/2019/07/18/5d3030b9d457e37686.png" alt="屏幕快照 2019-07-18 16.40.58.png"&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;拆分过程可以用个电子表格来做，最好再弄成可折叠的，似乎有专用的软件可以画图，但不知道excel或者其他通用的简单工具有没有这样的功能。注意子节点上的相关性X，一定要表现在父节点上。比如检查时发现调整$DP_{2}$时$FR_{12}$也跟着变，那$DP_{2}$其实与$FR_1$就是耦合的，中间肯定在某个步骤出错了。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th style="text-align:left"&gt;FRs&lt;/th&gt;
&lt;th style="text-align:left"&gt;$DP_1$&lt;/th&gt;
&lt;th style="text-align:left"&gt;$DP_{11}$&lt;/th&gt;
&lt;th style="text-align:left"&gt;$DP_{12}$&lt;/th&gt;
&lt;th style="text-align:left"&gt;$DP_{121}$&lt;/th&gt;
&lt;th style="text-align:left"&gt;$DP_{122}$&lt;/th&gt;
&lt;th style="text-align:left"&gt;$DP_{123}$&lt;/th&gt;
&lt;th style="text-align:left"&gt;$DP_{2}$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align:left"&gt;$FR_1$&lt;/td&gt;
&lt;td style="text-align:left"&gt;X&lt;/td&gt;
&lt;td style="text-align:left"&gt;X&lt;/td&gt;
&lt;td style="text-align:left"&gt;0&lt;/td&gt;
&lt;td style="text-align:left"&gt;0&lt;/td&gt;
&lt;td style="text-align:left"&gt;0&lt;/td&gt;
&lt;td style="text-align:left"&gt;0&lt;/td&gt;
&lt;td style="text-align:left"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:left"&gt;$FR_{11}$&lt;/td&gt;
&lt;td style="text-align:left"&gt;$\space$&lt;/td&gt;
&lt;td style="text-align:left"&gt;X&lt;/td&gt;
&lt;td style="text-align:left"&gt;0&lt;/td&gt;
&lt;td style="text-align:left"&gt;0&lt;/td&gt;
&lt;td style="text-align:left"&gt;0&lt;/td&gt;
&lt;td style="text-align:left"&gt;0&lt;/td&gt;
&lt;td style="text-align:left"&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:left"&gt;$FR_{12}$&lt;/td&gt;
&lt;td style="text-align:left"&gt;$\space$&lt;/td&gt;
&lt;td style="text-align:left"&gt;X&lt;/td&gt;
&lt;td style="text-align:left"&gt;X&lt;/td&gt;
&lt;td style="text-align:left"&gt;0&lt;/td&gt;
&lt;td style="text-align:left"&gt;0&lt;/td&gt;
&lt;td style="text-align:left"&gt;0&lt;/td&gt;
&lt;td style="text-align:left"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:left"&gt;$FR_{121}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:left"&gt;$FR_{122}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:left"&gt;$FR_{123}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:left"&gt;$FR_{2}$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;当有几个不同的拆分FRs(功能需求)的方法，得到了不同的DPs(设计参数)以后。如何判定那种方式更好呢？毫无疑问会陷入到办公室争吵中。&lt;/p&gt;
&lt;p&gt;公理设计的第二条公理：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;要令信息量最小&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;这里的信息量，是原教旨的信息量。记住这是MIT教授的书，WPI教授的课。&lt;/p&gt;
$$
I=-\sum_{i}^{\sigma(\mathrm{FR})} \log _{2} P_{i}
$$&lt;p&gt;其中$P_i$是$FR_i$实现的概率&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;在我理解，这只是实现概率最大化的恐怖公式表达而已。这一部分我还没有深究，毕竟我能想到一组DPs(设计参数)就已经不错了。&lt;/p&gt;
&lt;p&gt;这个公理大约对硬件选型的时候更有意义，比如同一个目的，在资金约束条件下，要选精度高一点，冗余大一点的零件。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>公理设计</category><guid>https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_3/</guid><pubDate>Thu, 18 Jul 2019 02:00:00 GMT</pubDate></item><item><title>公理设计笔记（2）</title><link>https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_2/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;如同商学院说事一定要画四格表，工学院说事一定要写向量和矩阵的。这种表述就是工科癖好。&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;有四个域（Domain）：&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;ul&gt;
&lt;li&gt;CNs：Customer Needs，&lt;ul&gt;
&lt;li&gt;客户需求。&lt;/li&gt;
&lt;li&gt;客户域&lt;/li&gt;
&lt;li&gt;就是客户描述的一大堆自然语言也说不清楚的事情，什么高端大气上档次之类的东西。&lt;/li&gt;
&lt;li&gt;What adds value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FRs：Functional Requirements，&lt;ul&gt;
&lt;li&gt;功能需求。&lt;/li&gt;
&lt;li&gt;功能域&lt;/li&gt;
&lt;li&gt;从CNs域到FRs域的变换，就是把客户漫无边际的需求翻译成一些可定量的参数，比如战舰控制系统的FR有二：1）控制航行方向。2）控制开炮方向。&lt;/li&gt;
&lt;li&gt;What it does&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DPs：Design Parameters，&lt;ul&gt;
&lt;li&gt;设计参数。&lt;/li&gt;
&lt;li&gt;物理域&lt;/li&gt;
&lt;li&gt;实现FRs的物理参数，比如航向控制器和炮塔控制器。&lt;/li&gt;
&lt;li&gt;What it looks like&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PVs：Process Variables，&lt;ul&gt;
&lt;li&gt;过程变量。&lt;/li&gt;
&lt;li&gt;过程域&lt;/li&gt;
&lt;li&gt;没细说，大概是如何实现DPs&lt;/li&gt;
&lt;li&gt;How you make it&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;这四个域里，最重要的是FRs（功能需求）到DPs（设计参数）的映射。 （考虑到我一向憎恶缩写，我会在每一个FRs后面都写上功能需求四个字）。其实我觉得从CNs(客户需求)到FRs(功能需求)的翻译也很重要，但这涉及到人类语言的模糊性，这个步骤还很难科学化。至于DPs(涉及参数）到PVs（过程变量）也就是实现过程，我们写发明通常就是引述为“现有技术”了。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;FRs（功能需求）会有很多啦，可以写成&lt;/p&gt;
$$
FRs=
\begin{bmatrix}FR_1 
\\ FR_2
\\ ...
\\ FR_n
\end{bmatrix}
$$&lt;p&gt;类似的，能够达成FRs（功能需求）的DPs（设计参数）也有很多，可以写成&lt;/p&gt;
$$
DPs=
\begin{bmatrix}DP_1 
\\ DP_2
\\ ...
\\ DP_m
\end{bmatrix}
$$
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;于是，DPs（设计参数）实现FRs（功能需求）这件事情，就可以写成矩阵乘法的形式
$$
FRs=A \times DPs
$$
或者说：
$$
\begin{bmatrix}FR_1 
\\ FR_2
\\ ...
\\ FR_n
\end{bmatrix}=
\begin{bmatrix}A_{11} &amp;amp; A_{12} &amp;amp; ... &amp;amp; A_{1m}
\\ A_{21} &amp;amp;  A_{22} &amp;amp; ... &amp;amp; A_{2m}
\\ ...
\\ A_{n1} &amp;amp;  A_{n2} &amp;amp; ... &amp;amp; A_{nm}
\end{bmatrix}
\begin{bmatrix}DP_1 
\\ DP_2
\\ ...
\\ DP_m
\end{bmatrix}
$$&lt;/p&gt;
&lt;p&gt;当然，不一定是线性的，那工科标准做法就是就求导，反正在小量范围内可以近似成线性的。其实还是类似上面的矩阵，只不过带上了偏导符号而已，还不如原来看得清楚，所以后面就按线性近似来说了。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;然后，华丽丽的矩阵写好以后，其实我们不关心$A_{ij}$的系数具体是怎样的，只关心是否为0，如果不是0，就画个x。
比如USS Monitor号上的情况。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$FR_1$（功能需求1）：调整航向&lt;/li&gt;
&lt;li&gt;$FR_2$（功能需求2）：调整开炮方向&lt;/li&gt;
&lt;li&gt;$DP_1$（设计参数1）：船舵&lt;/li&gt;
&lt;li&gt;$DP_2$（设计参数1）：旋转炮塔&lt;/li&gt;
&lt;/ul&gt;
$$
\begin{bmatrix}FR_1 
\\ FR_2
\end{bmatrix}=
\begin{bmatrix}A_{11} &amp;amp;  A_{12}
\\ A_{21} &amp;amp;  A_{22}
\end{bmatrix}
\begin{bmatrix}DP_1 
\\ DP_2
\end{bmatrix}
$$$$
\begin{bmatrix}FR_1 
\\ FR_2
\end{bmatrix}=
\begin{bmatrix}X &amp;amp;  0
\\ X &amp;amp;  X
\end{bmatrix}
\begin{bmatrix}DP_1 
\\ DP_2
\end{bmatrix}
$$&lt;p&gt;其中转动船舵的时候，船会转向，所以$A_{11}$这里是X，同时船身上的炮塔也跟着船一起转向，所以也影响开炮方向$FR_2$，因此$A_{21}$也是X。
而在旋转炮塔的时候，不影响船的航行方向，所以$A_{12}$这里是0。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="好的设计"&gt;好的设计&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_2/#%E5%A5%BD%E7%9A%84%E8%AE%BE%E8%AE%A1"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;一个好的设计是什么呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先FRs（功能需求）的数量N，应当等于DPs(设计参数）的数量M。&lt;/li&gt;
&lt;li&gt;每一个FR（功能需求）有且只有一个DP（设计参数）来调整。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就是A矩阵应当是一个对角矩阵，也就是说：&lt;/p&gt;
$$
A=\begin{bmatrix}
X &amp;amp; 0 &amp;amp; ... &amp;amp; 0
\\ 0 &amp;amp;  X &amp;amp; ... &amp;amp; 0
\\ ...
\\ 0 &amp;amp;  0 &amp;amp; ... &amp;amp; X
\end{bmatrix}
$$
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="可行的设计"&gt;可行的设计&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_2/#%E5%8F%AF%E8%A1%8C%E7%9A%84%E8%AE%BE%E8%AE%A1"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A矩阵是一个三角形矩阵，如果按照调整顺序来规划DPs(设计参数），那么更确切的说，应当是上三角矩阵&lt;/p&gt;
$$
\mathbf{A}=\left[\begin{array}{ccccc}{X} &amp;amp; {} &amp;amp; {\cdots} &amp;amp; {} &amp;amp; {0} \\ {X} &amp;amp; {X} &amp;amp; {} &amp;amp; {(0)} &amp;amp; {} \\ {X} &amp;amp; {X} &amp;amp; {\ddots} &amp;amp; {} &amp;amp; {\vdots} \\ {\vdots} &amp;amp; {\vdots} &amp;amp; {\ddots} &amp;amp; {\ddots} &amp;amp; {} \\ {X} &amp;amp; {X} &amp;amp; {\dots} &amp;amp; {X} &amp;amp; {X}\end{array}\right]
$$&lt;p&gt;在这种情况下，DPs(设计参数）仍然是可以一定程度decouple的，比如先调整船的航向，然后再调整炮塔的方向，但炮塔方向要先补偿船的转向，再加上需要旋转的角度。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="糟糕的设计"&gt;糟糕的设计&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_2/#%E7%B3%9F%E7%B3%95%E7%9A%84%E8%AE%BE%E8%AE%A1"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A里面到处都是X，并且无法通过交换FRs（功能需求）和DPs（设计参数）的顺序来形成三角形矩阵。比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FRs（功能需求）的数量N，小于 DPs(设计参数）的数量M。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CSS Virginia号的情况就是这样，有2个FRs(功能需求）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$FR_1$（功能需求1）：调整航向&lt;/li&gt;
&lt;li&gt;$FR_2$（功能需求2）：调整开炮方向&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但只有一个DP(设计参数）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$DP_1$（设计参数1）：船舵&lt;/li&gt;
&lt;/ul&gt;
$$
\begin{bmatrix}FR_1 
\\ FR_2
\end{bmatrix}=
\begin{bmatrix}X 
\\ X 
\end{bmatrix}
\begin{bmatrix}DP_1 
\end{bmatrix}
$$&lt;p&gt;写不成三角矩阵&lt;/p&gt;
&lt;p&gt;于是只好靠装甲厚实扛打&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>公理设计</category><guid>https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_2/</guid><pubDate>Wed, 17 Jul 2019 14:00:00 GMT</pubDate></item><item><title>公理设计笔记（1）</title><link>https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_1/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;一个夏日的上午，我在图书馆里闲逛（据@cxqn 说这是有闲阶级才能做的事情），偶遇一本&lt;a href="https://book.douban.com/subject/1238993/"&gt;《公理设计》&lt;/a&gt;，看书名觉得好奇于是拿出来翻了翻，觉得内容不错。网上还可以找到一篇文献&lt;a href="http://blog.sciencenet.cn/home.php?mod=attachment&amp;amp;id=40989"&gt;《公理设计理论及其应用》&lt;/a&gt; 做了一些基本介绍。&lt;/p&gt;
&lt;p&gt;但看起来这是一门课了，所以估计会有公开课来讲解。于是上网搜了一下，还真是找到了&lt;a href="https://www.youtube.com/playlist?list=PLMDNnNJK3B1UlhdIfsFaezkHWbofX7Blj"&gt;MFE 594 An Introduction to Axiomatic Design&lt;/a&gt;，有4节课，大约一共4个多小时，花了两天看完，再回来翻翻书，有一些收获，决定写一点笔记。&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;首先从1862年11月13日的&lt;a href="https://www.history.com/this-day-in-history/u-s-s-monitor-battles-c-s-s-virginia"&gt;一场海战&lt;/a&gt;讲起。这场海战“标志着蒸汽动力铁甲舰新时代的到来。”&lt;/p&gt;
&lt;p&gt;南方C.S.S的Virginia号战舰，体型庞大，非常凶悍。已经击沉了两艘联邦军舰。北方U.S.S派出了Monitor号，一艘小得多的军舰。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.battlefields.org/sites/default/files/styles/gallery_item/public/thumbnails/image/comparison-of-the-css_0.jpg"&gt;
图片来自https://www.battlefields.org/learn/galleries/battle-hampton-roads&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;/th&gt;
&lt;th align="left"&gt;USS Monitor&lt;/th&gt;
&lt;th align="left"&gt;CSS Virginia&lt;/th&gt;
&lt;th align="left"&gt;V : M&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;长度&lt;/td&gt;
&lt;td align="left"&gt;173.00ft&lt;/td&gt;
&lt;td align="left"&gt;262.75 ft&lt;/td&gt;
&lt;td align="left"&gt;1.52&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;宽度&lt;/td&gt;
&lt;td align="left"&gt;41.33 ft&lt;/td&gt;
&lt;td align="left"&gt;51.16 ft&lt;/td&gt;
&lt;td align="left"&gt;1.24&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;排水量&lt;/td&gt;
&lt;td align="left"&gt;987 tons&lt;/td&gt;
&lt;td align="left"&gt;3,200 tons&lt;/td&gt;
&lt;td align="left"&gt;3.25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;船员&lt;/td&gt;
&lt;td align="left"&gt;52&lt;/td&gt;
&lt;td align="left"&gt;350&lt;/td&gt;
&lt;td align="left"&gt;6.73&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;火炮&lt;/td&gt;
&lt;td align="left"&gt;2&lt;/td&gt;
&lt;td align="left"&gt;12&lt;/td&gt;
&lt;td align="left"&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这个比例看起来就是大雄vs胖虎之战。&lt;/p&gt;
&lt;p&gt;CSS Virginia的特点除了大，还有就是都是固定炮塔，两侧和首尾有很多门炮。而USS Monitor有一个可以旋转的炮台。&lt;/p&gt;
&lt;p&gt;一条战舰需要满足两个功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调整航行方向&lt;/li&gt;
&lt;li&gt;调整炮击方向&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于CSS Virginia，这两个功能需求是“耦合”couple 的，要改变炮击方向，就需要将船只转向。而对于USS Monitor，这两个功能需求则是“解耦合”decouple 的，航行方向与炮击方向无关，炮击方向可以独立调整。&lt;/p&gt;
&lt;p&gt;于是Monitor一直尽量守在Virginia的射击死角攻击，而Virginia则必须不断绕开，于是就不断绕圈。这两条船打了4个小时，Virginia撤退了。&lt;/p&gt;
&lt;p&gt;这是视频公开课上老师讲的一个有趣的例子。老师在课上讲解的时候说Virginia被Monitor给neutralize了，所谓&lt;a href="https://www.vocabulary.com/dictionary/neutralize"&gt;neutralize&lt;/a&gt;，军事上解释为 make incapable of military action，丧失军事能力。但按照history.com的记录，Virginia只是撤退了，毕竟Monitor只有两门炮，而Virginia还有很厚的铁甲。但大雄把胖虎打到先撤退跑了，如果再来一艘结果就不一定了。&lt;/p&gt;
&lt;p&gt;可以引出设计公理的第一条：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;满足功能需求（Functional Requirements, FRs)的参数设计（Design Parameter, DPs) 应当要解耦合（decouple）&lt;/p&gt;
&lt;/blockquote&gt;&lt;/div&gt;</description><category>公理设计</category><guid>https://goldengrape.github.io/posts/bulabula/axiomatic_design_note_1/</guid><pubDate>Wed, 17 Jul 2019 10:00:00 GMT</pubDate></item><item><title>急诊儿童外伤缝合经验一则</title><link>https://goldengrape.github.io/posts/ophthalmology/child_trauma_suture_in_ER%20%20/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;整理网盘，发现很久很久以前我当医生时写的一则经验总结，很有趣。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;总结一下急诊儿童缝合：
&lt;!-- TEASER_END --&gt;&lt;/p&gt;
&lt;p&gt;通常是男孩，接诊以后，如果父亲陪同，则将母亲支走。对男孩的称呼一律使用成年人称呼，如小伙子，男子汉等。检查的时候明确告诉孩子不会疼痛，若触及伤口，则事先声明可能略疼痛，检查完成后，向孩子及其父亲交待病情，需要缝合；缝合的时候要打麻药；打麻药的时候会疼；缝合的时候不疼。&lt;/p&gt;
&lt;p&gt;反复向孩子明确：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打麻药的时候会疼，与平时打针相似。&lt;/li&gt;
&lt;li&gt;允许哭但绝不允许动。&lt;/li&gt;
&lt;li&gt;缝合的时候不会疼痛。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;待孩子同意“允许哭，但不允许动”以后，带入手术室，孩子父亲控制，陪同。&lt;/p&gt;
&lt;p&gt;消毒时事先声明，可能有不适感。打麻药前再次向孩子告知不许动。但很疼的话，可以哭。打完麻药后向孩子询问是否疼痛，并表扬，鼓励。以齿镊测试麻醉效果，再行缝合。&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;明确告知何时会有疼痛，何时没有疼痛。&lt;/li&gt;
&lt;li&gt;不要否认孩子的主观感受。&lt;/li&gt;
&lt;li&gt;不要恐吓或欺骗孩子，任何利诱的承诺应有家长作出。&lt;/li&gt;
&lt;li&gt;尽可能使孩子认为自己是成年人。&lt;/li&gt;
&lt;li&gt;避免使用“快完了”“很快”等语言。直接告诉孩子还需要缝合几针，如果感觉疼痛，可以再补麻药。&lt;/li&gt;
&lt;li&gt;语调尽可能平静、沉稳、客观，甚至可以毫无感情色彩。&lt;/li&gt;
&lt;li&gt;缝合以后，称赞、鼓励。&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>ophthalmology</category><guid>https://goldengrape.github.io/posts/ophthalmology/child_trauma_suture_in_ER%20%20/</guid><pubDate>Sat, 13 Jul 2019 04:00:00 GMT</pubDate></item><item><title>根据字幕做视频摘要续集</title><link>https://goldengrape.github.io/posts/python/video_keynote_2/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;我又继续做奇怪的小工具了。上一次做完了&lt;a href="https://goldengrape.github.io/posts/python/video_keynote/"&gt;根据字幕做视频摘要&lt;/a&gt;之后，仍然不太满意，因为那个工具只是面向youtube的，对于本地的视频，或者是下载到本地的视频课程，仍然不够好用。所以我做了一些修改，已经&lt;a href="https://github.com/goldengrape/video_keynotes"&gt;发布到了github上&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;现在可以先通过&lt;a href="https://github.com/coursera-dl/coursera-dl"&gt;coursera-dl&lt;/a&gt;下载整个课程，然后再通过字幕划出重点，生成复习用的视频摘要。&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;h2&gt;使用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;需先下载课程视频和字幕文件&lt;ul&gt;
&lt;li&gt;coursera上的课程可以使用&lt;a href="https://github.com/coursera-dl/coursera-dl"&gt;coursera-dl&lt;/a&gt;进行下载。注意其中的&lt;a href="https://github.com/coursera-dl/coursera-dl#china-issues"&gt;china-issues&lt;/a&gt;, 可能需要通过VPN才能正常访问国际互联网。&lt;ul&gt;
&lt;li&gt;使用coursera-dl下载出现"HTTPError:400"问题，请参考&lt;a href="https://github.com/coursera-dl/coursera-dl/issues/702#issuecomment-506929946"&gt;此解决方案&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Youtube上的课程，例如OCW，可以使用&lt;a href="https://rg3.github.io/youtube-dl/"&gt;youtube-dl&lt;/a&gt;进行下载。注意需要将对应的字幕也下载下来&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;将字幕文件处理成txt脚本&lt;ul&gt;
&lt;li&gt;处理单个文件：&lt;code&gt;python sub2txt.py -i &amp;lt;subtitle file name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;处理整个目录：&lt;code&gt;python sub2txt.py -p &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;手动编辑txt脚本，将你认为不重要的部分删除后保存，尽量不要修改txt文件名&lt;/li&gt;
&lt;li&gt;按编辑后的txt脚本剪辑视频课程：&lt;ul&gt;
&lt;li&gt;处理单个文件：&lt;code&gt;python clip_by_txt.py -t &amp;lt;txt file&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;处理整个目录：&lt;code&gt;python clip_by_txt.py -p &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;剪辑完成的视频将以summary_开头，存储在视频课程原位，并且附带有srt的字幕。&lt;/p&gt;
&lt;h2&gt;Demo&lt;/h2&gt;
&lt;p&gt;这是一个剪辑自coursera上的learning how to learn课程第一周第一课&lt;a href="https://www.coursera.org/learn/learning-how-to-learn/lecture/75EsZ/introduction-to-the-focused-and-diffuse-modes"&gt;introduction-to-the-focused-and-diffuse-modes&lt;/a&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/embed/UjkYY6HUSyY"&gt;Youtube视频&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;其他&lt;/h2&gt;
&lt;p&gt;似乎用来剪辑电影也会很方便吧。&lt;/p&gt;
&lt;p&gt;说到剪辑电影，我还发现了一个有趣的工具&lt;a href="https://antiboredom.github.io/videogrep/"&gt;videogrep&lt;/a&gt;，与我做的工具类似，但他是在字幕中检索关键词或者使用正则表达式来检索，效果惊艳：
&lt;a href="https://www.youtube.com/watch?v=PQMzOUeprlk"&gt;All the instances of the phrase “time” in the movie “In Time”&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/python/video_keynote_2/</guid><pubDate>Fri, 05 Jul 2019 04:00:00 GMT</pubDate></item><item><title>phaco训练手册视频版开始连载</title><link>https://goldengrape.github.io/posts/ophthalmology/phaco-training-OCW/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;每年这一天，我都会发点有意义的东西作为纪念。&lt;/p&gt;
&lt;p&gt;今年的项目是“Phaco训练手册视频版”。但我低估了工作量，光是做关于主切口的ppt，我就做了好几天，还没写完。所以到今天只能说开始连载，而无法做到完全发布。大概每周我会再继续发布一两个视频。&lt;/p&gt;
&lt;p&gt;说是视频，更多其实是配音PPT。插图我尽量采用绘制的图像，少量使用照片，这样讲解更清楚，而且与各个厂家特定的产品关联不大。&lt;/p&gt;
&lt;p&gt;考虑到要方便修改，所以我使用的是text to speech进行的配音，配音的文本在每个ppt的“备注”里，需要的话您也可以打开看。&lt;/p&gt;
&lt;p&gt;目前使用的是讯飞的语音引擎。其中会有一点点小问题，比如讯飞会把phaco读成“Ph-ar-co”，把“粘弹剂”读成可怕的“沾-蛋-剂”，所以在配音文本里把phaco写成了pheico，把“粘弹剂”写成了“年弹剂”，仅仅是为了读音好听。&lt;/p&gt;
&lt;p&gt;所有的PPT和文本，放在：
&lt;a href="https://github.com/goldengrape/phaco-training-manual"&gt;https://github.com/goldengrape/phaco-training-manual&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;视频存放有点问题，在国内难以找到一个对我舒适的分享网站，要不就要实名认证要不就要审核或者干脆不允许医学教学视频出现。&lt;/p&gt;
&lt;p&gt;所以视频在YouTube 上有一份，如果您能正常访问国际互联网，可以打开：
&lt;a href="https://www.youtube.com/playlist?list=PLMDNnNJK3B1UPYE9xxD1DnlcVZV7SrQnj"&gt;https://www.youtube.com/playlist?list=PLMDNnNJK3B1UPYE9xxD1DnlcVZV7SrQnj&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;国内的视频播放，我可以非独占地授权给一些公众号，让他们自己上传到自己的公众号中供大家看。如果想直接下载源视频，我暂时先放在百度云里：&lt;/p&gt;
&lt;p&gt;链接: &lt;a href="https://pan.baidu.com/s/1KwY_WEr85i8vPNtWy4rOTg"&gt;https://pan.baidu.com/s/1KwY_WEr85i8vPNtWy4rOTg&lt;/a&gt; 提取码: fsmu &lt;/p&gt;
&lt;p&gt;需要强调的是，这个课程还在制作中，内容也有可能不断修订。但愿我能一直坚持下去把它做完。&lt;/p&gt;
&lt;p&gt;如果您对教程中的插图感兴趣，我已经做好了一份开源的图集：&lt;a href="https://github.com/goldengrape/phacoTools"&gt;https://github.com/goldengrape/phacoTools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果您对给PPT自动配音感兴趣，这是我以前做好的配音程序: &lt;a href="https://github.com/goldengrape/dubbing-pptx"&gt;https://github.com/goldengrape/dubbing-pptx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于此训练手册，您有什么意见建议，可以在github上提issue：&lt;a href="https://github.com/goldengrape/phaco-training-manual/issues"&gt;https://github.com/goldengrape/phaco-training-manual/issues&lt;/a&gt;, 也可以fork自行修改，这是一个开放的项目，希望能够帮助更多的医生。&lt;/p&gt;&lt;/div&gt;</description><category>ophthalmology</category><guid>https://goldengrape.github.io/posts/ophthalmology/phaco-training-OCW/</guid><pubDate>Thu, 04 Jul 2019 04:00:00 GMT</pubDate></item><item><title>出考试题</title><link>https://goldengrape.github.io/posts/bulabula/Exam-questions/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;明天给8个人讲课然后出题考试，考试结果和他们奖金挂钩，这种得罪人的事我才不干呢，而且我最烦出题了，因为要想出干扰项是很困难的。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;于是想出了非常&lt;strong&gt;心狠手辣&lt;/strong&gt;的出题方式：&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;ul&gt;
&lt;li&gt;抽签轮流互相出题，&lt;/li&gt;
&lt;li&gt;每讲完一个部分，按抽签序列由1个人出题，出完题目以后教给主考官收藏，全部讲完后一起公开题目。&lt;/li&gt;
&lt;li&gt;题目必须是4选1的单项选择题.&lt;/li&gt;
&lt;li&gt;每1个人出题，由另外7个人回答，&lt;/li&gt;
&lt;li&gt;其余人全答对或者全答错，出题人得0分。&lt;/li&gt;
&lt;li&gt;其余人答对1或6题，出题人得0.3分。&lt;/li&gt;
&lt;li&gt;其余人答对2或5题，出题人得0.7分。&lt;/li&gt;
&lt;li&gt;其余人答对3或4题，出题人得1分。&lt;/li&gt;
&lt;li&gt;当然，如果题目出错了，出题人应被扣1分。&lt;!-- TEASER_END --&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;定性分析一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;得到的题目不会太难太偏，似乎也不容易太简单放水。&lt;/li&gt;
&lt;li&gt;一个解是每个人都放水，出特别简单的题，其余人都答对，自己得0分，这样每个人的分数相同，最终平分奖金，但把自己的命运寄托于其他人，这显然不是个稳定的解，形成了&lt;strong&gt;多人囚徒困境&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;如果限定题目是判断题，出题人可以出最难的题，其余人随机作答，出题人得到1分，于是应该要限定题目类型，&lt;/li&gt;
&lt;li&gt;目前我设想是限定4选项的选择题，那么可能出现随机作答，于是有1-2人做对，出题人得分0.3或0.7，而有两人得分1，出题人自己吃亏。其实选项越多越好，选项越多，出最难题的可能性越小。&lt;/li&gt;
&lt;li&gt;有可能先出题和后出题之间有优势差异。（但也不一定，比如依次出题并且出题后立刻就做，那么对于最后一个人如果他放水，自己就吃亏了。）&lt;ul&gt;
&lt;li&gt;一是可以随机抽签，但因为只考一次，随机的公平性不明显。&lt;/li&gt;
&lt;li&gt;二是可以每个人出题以后考官收藏起来，收集完整以后再统一公布。打算使用这种方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果是最后一起考，似乎互相抄袭的作弊可能性就很小了。当然也有可能全体一起作弊，达到均衡，但这种均衡太明显了，完全可以重考。&lt;/li&gt;
&lt;li&gt;如果人数足够多，比如一个50人班级，这样可以出期末考试题了。&lt;/li&gt;
&lt;li&gt;或者人数太多时也可以分组互虐。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实在太有趣了。&lt;/p&gt;
&lt;p&gt;另外，要使囚徒困境有效，向每个人讲解一下囚徒困境是有必要的，不然碰上没听明白的，反而容易偏离均衡点。&lt;/p&gt;
&lt;p&gt;那么问题来了，每人考试成绩的期望值是多少呢？&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="次日更新"&gt;次日更新&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/bulabula/Exam-questions/#%E6%AC%A1%E6%97%A5%E6%9B%B4%E6%96%B0"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;实测结果，因为首次使用，所以略混乱，前几题还好，后面他们发现自己出题的分值影响很小就放水了，这个是我考虑不周。&lt;/p&gt;
&lt;p&gt;所以如果改进，应当是计算出自己出题得到的系数后，要乘个倍数，比如x5甚至x10，那么与其他题目就具有可比性。或者，如果是学习小组反复多次进行快速小测试，甚至可以舍弃其他题目的得分，仅仅以出题分来衡量。&lt;/p&gt;
&lt;p&gt;补充一下计算公式:&lt;/p&gt;
$$
s_i=K \times(1 - \frac{\lvert c_i-0.5\rvert}{0.5})
$$&lt;p&gt;其中:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;s(i)是第i题出题人的得分 &lt;/li&gt;
&lt;li&gt;c(i)是第i题其他人的正确率&lt;/li&gt;
&lt;li&gt;K是一个常数系数，用来调整出题分的吸引力&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个方法如果用在一个学习小组，比如小奥班什么的，可能会产生非常强的学习动力。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/bulabula/Exam-questions/</guid><pubDate>Thu, 27 Jun 2019 10:00:00 GMT</pubDate></item><item><title>眼科网络资源索引贴</title><link>https://goldengrape.github.io/posts/ophthalmology/ophthalomology-network-resources/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;最近又做了一次wetlab培训，发现还是有很多同学不知道网上有哪些眼科学习资源。以前总结过，现在再补充更新，以下内容于2019年6月确认过链接有效性：&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;h2&gt;眼科图谱：&lt;/h2&gt;
&lt;p&gt;眼科是看图像识别的疾病的学科。图谱的资源在眼科是最重要的了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;眼科学数据库（Atlas of Ophthalmology）是由该领域专家编著的公开的在线免费数据库。&lt;a href="https://www.atlasophthalmology.net/"&gt;https://www.atlasophthalmology.net/&lt;/a&gt; 这个图谱之中有各种语言，其中也有中文。分类很清楚。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;哈佛大学的眼科数字期刊：&lt;a href="http://www.djo.harvard.edu/"&gt;http://www.djo.harvard.edu/&lt;/a&gt; 喜欢看各种病例的话，这里有很多。各种大查房的记录，讨论，现在还增加了许多review&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;哥伦比亚大学的眼科图谱：&lt;a href="https://www.columbiaeye.org/education/digital-reference-of-ophthalmology"&gt;https://www.columbiaeye.org/education/digital-reference-of-ophthalmology&lt;/a&gt; 
这是我最喜欢的眼科图谱了，分类清楚，访问速度快，我曾经下载了整个网站制作成电子书收藏。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IOWA 大学的眼科论坛也做得相当不错：&lt;a href="http://webeye.ophth.uiowa.edu/eyeforum/atlas/index.htm"&gt;http://webeye.ophth.uiowa.edu/eyeforum/atlas/index.htm&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ICO： &lt;a href="http://www.icoph.org/"&gt;http://www.icoph.org/&lt;/a&gt; 这就是大名鼎鼎的ICO考试的网站了，不过除了考试内容，其实里面也有很多学习资源。其中要特别推荐&lt;a href="http://www.icoph.org/resources/230/Surgical-Assessment-Tool-ICO-OSCAR-in-English-and-Spanish.html"&gt;ICO OSCAR(ICO Ophthalmology Surgical Competency Assessment Rubric, ICO-OSCAR)&lt;/a&gt; 是手术技能评分系统，很细致，既可以当作自我评估工具也可以当作学习要点和大纲。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;视频资源：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;eyetube: &lt;a href="https://eyetube.net/"&gt;https://eyetube.net/&lt;/a&gt;  这里面是分类细致的眼科视频资源，有很多手术视频可以看，也有很多讲课、发言、演示。需要注册一下，但注册是免费的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;youtube：&lt;a href="https://youtube.com/"&gt;https://youtube.com/&lt;/a&gt;  youtube是万能的，它已经是一个互联网的基础服务平台，要找视频很难忽视它，有无数的医生、学者把自己的手术视频、教学、讲课甚至论文讲解放在youtube上。比如连续环形撕囊的发明者Dr. Gimbel老爷爷亲自在黑板前讲解撕囊。不过很遗憾，youtube在国内是难以访问的，需要有"!正常访问国际互联网!"的能力。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Neuro-Ophthalmology with Dr. Andrew G. Lee: &lt;a href="https://www.youtube.com/channel/UC5HcfsELV0W9AqtvJvpQQSg"&gt;https://www.youtube.com/channel/UC5HcfsELV0W9AqtvJvpQQSg&lt;/a&gt; Dr.Lee 讲解神经眼科的视频，短小精悍清晰易懂。虽然我还是很恐惧神经眼科，但也许慢慢看会懂更多吧。&lt;/li&gt;
&lt;li&gt;Basic Microsuture Technique:&lt;a href="https://www.youtube.com/watch?v=3tDYU3f1XfY"&gt;https://www.youtube.com/watch?v=3tDYU3f1XfY&lt;/a&gt; 非常非常非常好的显微缝合教程&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B站：&lt;a href="https://www.bilibili.com/"&gt;https://www.bilibili.com/&lt;/a&gt; 最近B站的学术氛围令人惊讶，很多具有"!正常访问国际互联网!"能力的人，把国外优秀的视频资源搬运到B站了。比如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://space.bilibili.com/88461692"&gt;3B1B甚至开了官方镜像&lt;/a&gt; 这是一个很好的数学课程演示。据我所知，国内的医学教育数学基础极差，很多所谓知名大学一流大学连线性代数都没开，可以在这里快速补习。&lt;/li&gt;
&lt;li&gt;搜Lynda会有惊喜&lt;/li&gt;
&lt;li&gt;大量计算机课程。但目前眼科手术和课程比较少。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;视频下载：&lt;/h2&gt;
&lt;p&gt;高概率你需要具有"!正常访问国际互联网!"，然后你可能需要有一定的编程基础知识。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;youtub-dl：&lt;a href="https://rg3.github.io/youtube-dl/"&gt;https://rg3.github.io/youtube-dl/&lt;/a&gt; 非常强大的命令行下载工具，可以下载很多网站的视频资源，甚至，如果你能够找到一些微信直播课程里的视频链接或者"m3u8"文件地址，也可以把很多微课下载到本地。&lt;/li&gt;
&lt;li&gt;miku tools：&lt;a href="https://miku.tools/"&gt;https://miku.tools/&lt;/a&gt; 一个工具包网站，不要在里面迷失了自己。&lt;/li&gt;
&lt;li&gt;eyetube的视频页面，如果查看页面源代码，可能可以找到视频的mp4文件。
&lt;img alt="屏幕快照 2019-06-24 12.17.55" src="https://i.loli.net/2019/06/24/5d104f080ddb377256.png"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;专利资源：&lt;/h2&gt;
&lt;p&gt;多数眼科医生对专利的知识很少。常常听到会有人说这个技术是某个公司的专利，所以我们不知道。错了！“专利”是公开的、可查阅的，“技术秘密”才是隐蔽的。眼科有很多新技术，医生接触的大多数是销售，他们对技术的解读是经过包装删减的，缺乏细节，要想直接了解技术细节，应该要看专利。&lt;/p&gt;
&lt;p&gt;各国的专利局/知识产权局都是政府机构，都有自己的查询网站。政府网站嘛，你了解的，通常不好用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;soopat：&lt;a href="http://www.soopat.com/"&gt;http://www.soopat.com/&lt;/a&gt; 国内比较好用的专利检索工具，下载全文要注册一下。&lt;/li&gt;
&lt;li&gt;Google Patent：&lt;a href="https://patents.google.com/"&gt;https://patents.google.com/&lt;/a&gt; 谷歌的专利检索，国外专利最方便的检索工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;文献、书籍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;sci-hub: &lt;a href="https://sci-hub.tw"&gt;https://sci-hub.tw&lt;/a&gt; 众所周知，sci-hub也是万能的。网址一段时间可能会改变，但 .tw网址已经存活了相当长的时间。&lt;/li&gt;
&lt;li&gt;libgen：&lt;a href="http://libgen.io/"&gt;http://libgen.io/&lt;/a&gt; 大量的电子书&lt;/li&gt;
&lt;li&gt;AAO eyewiki: &lt;a href="https://eyewiki.aao.org/Main_Page"&gt;https://eyewiki.aao.org/Main_Page&lt;/a&gt; 可以说是眼科学的维基百科了，不同的是，这是由专家编写的。&lt;/li&gt;
&lt;li&gt;WebVision:&lt;a href="https://webvision.med.utah.edu/"&gt;https://webvision.med.utah.edu/&lt;/a&gt; 这是一本在线的视网膜生理学病理生理学教科书。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;英语辅助工具：&lt;/h2&gt;
&lt;p&gt;"!正常访问国际互联网!"的能力和英语(至少是阅读和听力)能力，是保持先进的必备能力。&lt;/p&gt;
&lt;p&gt;当前已经无法合法地讲解"!正常访问国际互联网!"的能力，所以只能讲解一下英语辅助工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;cnki的在线词典：&lt;a href="http://dict.cnki.net/"&gt;http://dict.cnki.net/&lt;/a&gt;  如果遇到某些专业词汇感觉有困难，推荐使用cnki的在线词典，专业词汇的中英互译，也可以看看同道们是怎么说的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;彩云小译：&lt;a href="https://fanyi.caiyunapp.com/#/app"&gt;https://fanyi.caiyunapp.com/#/app&lt;/a&gt; app不错，网页翻译也不错，但网页翻译插件在官网上找不到了，不知道是否以后还会继续提供。翻译量大了要订阅付费，反正每月只要几块钱我就订了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;transgod：&lt;a href="https://fanyi.transgod.cn/"&gt;https://fanyi.transgod.cn/&lt;/a&gt; 值得反复推荐、极端优秀的医学全文翻译工具。导致我现在很爱看文献。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;我的贡献：&lt;/h2&gt;
&lt;p&gt;我自己也做了很多眼科教学的东西。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://goldengrape.github.io/categories/xian-dai-yan-ke-yi-sheng-zhi-shi-kuo-zhan-bao/"&gt;现代眼科医生知识扩展包&lt;/a&gt; 算了，我不指望有人能看进去。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goldengrape/Python-for-ophthalmologist"&gt;面向眼科医生的Python教程&lt;/a&gt; 算了，我也不指望有人能看进去。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goldengrape/phaco-training-manual"&gt;phaco训练手册&lt;/a&gt; 我正在进行插图和ppt化，完成版本将是一个有配音的视频教程。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goldengrape/phacoTools"&gt;phaco手术器械插图&lt;/a&gt; 这是为了训练手册而准备的插图，可免费使用。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goldengrape/read_medical_device_data"&gt;医学数据读取工具&lt;/a&gt; 眼科设备很多，产生的数据也很多，大厂商还往往比较抠门，不愿意共享或者导出数据，这是我写的一个读取数据的工具包。&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>ophthalmology</category><guid>https://goldengrape.github.io/posts/ophthalmology/ophthalomology-network-resources/</guid><pubDate>Mon, 24 Jun 2019 03:00:01 GMT</pubDate></item></channel></rss>